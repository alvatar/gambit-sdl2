(definition:
 (c-define-struct
  SDL_AudioCVT
  (needed int)
  (src_format SDL_AudioFormat)
  (dst_format SDL_AudioFormat)
  (rate_incr double)
  (buf unsigned-int8*)
  (len int)
  (len_cvt int)
  (len_mult int)
  (len_ratio double))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_AudioCVT( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_AudioCVT
     (c-lambda
      ()
      SDL_AudioCVT*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_AudioCVT ) );"))
   (define *->SDL_AudioCVT
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      SDL_AudioCVT
      "___result_voidstar = (SDL_AudioCVT*)___arg1;"))
   (define SDL_AudioCVT-needed
     (c-lambda (SDL_AudioCVT*/nonnull) int "___result = ___arg1->needed;"))
   (define SDL_AudioCVT-needed-set!
     (c-lambda (SDL_AudioCVT*/nonnull int) void "___arg1->needed = ___arg2;"))
   (define SDL_AudioCVT-src_format
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      SDL_AudioFormat
      "___result = ___arg1->src_format;"))
   (define SDL_AudioCVT-src_format-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull SDL_AudioFormat)
      void
      "___arg1->src_format = ___arg2;"))
   (define SDL_AudioCVT-dst_format
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      SDL_AudioFormat
      "___result = ___arg1->dst_format;"))
   (define SDL_AudioCVT-dst_format-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull SDL_AudioFormat)
      void
      "___arg1->dst_format = ___arg2;"))
   (define SDL_AudioCVT-rate_incr
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      double
      "___result = ___arg1->rate_incr;"))
   (define SDL_AudioCVT-rate_incr-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull double)
      void
      "___arg1->rate_incr = ___arg2;"))
   (define SDL_AudioCVT-buf
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      unsigned-int8*
      "___result = ___arg1->buf;"))
   (define SDL_AudioCVT-buf-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull unsigned-int8*)
      void
      "___arg1->buf = ___arg2;"))
   (define SDL_AudioCVT-len
     (c-lambda (SDL_AudioCVT*/nonnull) int "___result = ___arg1->len;"))
   (define SDL_AudioCVT-len-set!
     (c-lambda (SDL_AudioCVT*/nonnull int) void "___arg1->len = ___arg2;"))
   (define SDL_AudioCVT-len_cvt
     (c-lambda (SDL_AudioCVT*/nonnull) int "___result = ___arg1->len_cvt;"))
   (define SDL_AudioCVT-len_cvt-set!
     (c-lambda (SDL_AudioCVT*/nonnull int) void "___arg1->len_cvt = ___arg2;"))
   (define SDL_AudioCVT-len_mult
     (c-lambda (SDL_AudioCVT*/nonnull) int "___result = ___arg1->len_mult;"))
   (define SDL_AudioCVT-len_mult-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull int)
      void
      "___arg1->len_mult = ___arg2;"))
   (define SDL_AudioCVT-len_ratio
     (c-lambda
      (SDL_AudioCVT*/nonnull)
      double
      "___result = ___arg1->len_ratio;"))
   (define SDL_AudioCVT-len_ratio-set!
     (c-lambda
      (SDL_AudioCVT*/nonnull double)
      void
      "___arg1->len_ratio = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_AudioSpec
  (freq int)
  (format SDL_AudioFormat)
  (channels unsigned-int8)
  (silence unsigned-int8)
  (samples unsigned-int16)
  (size unsigned-int32)
  (callback SDL_AudioCallback)
  (userdata void*))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_AudioSpec( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_AudioSpec
     (c-lambda
      ()
      SDL_AudioSpec*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_AudioSpec ) );"))
   (define *->SDL_AudioSpec
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      SDL_AudioSpec
      "___result_voidstar = (SDL_AudioSpec*)___arg1;"))
   (define SDL_AudioSpec-freq
     (c-lambda (SDL_AudioSpec*/nonnull) int "___result = ___arg1->freq;"))
   (define SDL_AudioSpec-freq-set!
     (c-lambda (SDL_AudioSpec*/nonnull int) void "___arg1->freq = ___arg2;"))
   (define SDL_AudioSpec-format
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      SDL_AudioFormat
      "___result = ___arg1->format;"))
   (define SDL_AudioSpec-format-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull SDL_AudioFormat)
      void
      "___arg1->format = ___arg2;"))
   (define SDL_AudioSpec-channels
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      unsigned-int8
      "___result = ___arg1->channels;"))
   (define SDL_AudioSpec-channels-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull unsigned-int8)
      void
      "___arg1->channels = ___arg2;"))
   (define SDL_AudioSpec-silence
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      unsigned-int8
      "___result = ___arg1->silence;"))
   (define SDL_AudioSpec-silence-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull unsigned-int8)
      void
      "___arg1->silence = ___arg2;"))
   (define SDL_AudioSpec-samples
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      unsigned-int16
      "___result = ___arg1->samples;"))
   (define SDL_AudioSpec-samples-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull unsigned-int16)
      void
      "___arg1->samples = ___arg2;"))
   (define SDL_AudioSpec-size
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      unsigned-int32
      "___result = ___arg1->size;"))
   (define SDL_AudioSpec-size-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull unsigned-int32)
      void
      "___arg1->size = ___arg2;"))
   (define SDL_AudioSpec-callback
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      SDL_AudioCallback
      "___result = ___arg1->callback;"))
   (define SDL_AudioSpec-callback-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull SDL_AudioCallback)
      void
      "___arg1->callback = ___arg2;"))
   (define SDL_AudioSpec-userdata
     (c-lambda
      (SDL_AudioSpec*/nonnull)
      void*
      "___result = ___arg1->userdata;"))
   (define SDL_AudioSpec-userdata-set!
     (c-lambda
      (SDL_AudioSpec*/nonnull void*)
      void
      "___arg1->userdata = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_Color
  (r unsigned-int8)
  (g unsigned-int8)
  (b unsigned-int8)
  (a unsigned-int8))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Color( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Color
     (c-lambda
      ()
      SDL_Color*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Color ) );"))
   (define *->SDL_Color
     (c-lambda
      (SDL_Color*/nonnull)
      SDL_Color
      "___result_voidstar = (SDL_Color*)___arg1;"))
   (define SDL_Color-r
     (c-lambda (SDL_Color*/nonnull) unsigned-int8 "___result = ___arg1->r;"))
   (define SDL_Color-r-set!
     (c-lambda
      (SDL_Color*/nonnull unsigned-int8)
      void
      "___arg1->r = ___arg2;"))
   (define SDL_Color-g
     (c-lambda (SDL_Color*/nonnull) unsigned-int8 "___result = ___arg1->g;"))
   (define SDL_Color-g-set!
     (c-lambda
      (SDL_Color*/nonnull unsigned-int8)
      void
      "___arg1->g = ___arg2;"))
   (define SDL_Color-b
     (c-lambda (SDL_Color*/nonnull) unsigned-int8 "___result = ___arg1->b;"))
   (define SDL_Color-b-set!
     (c-lambda
      (SDL_Color*/nonnull unsigned-int8)
      void
      "___arg1->b = ___arg2;"))
   (define SDL_Color-a
     (c-lambda (SDL_Color*/nonnull) unsigned-int8 "___result = ___arg1->a;"))
   (define SDL_Color-a-set!
     (c-lambda
      (SDL_Color*/nonnull unsigned-int8)
      void
      "___arg1->a = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_DisplayMode
  (format unsigned-int32)
  (w int)
  (h int)
  (refresh_rate int)
  (driverdata void*))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_DisplayMode( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_DisplayMode
     (c-lambda
      ()
      SDL_DisplayMode*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_DisplayMode ) );"))
   (define *->SDL_DisplayMode
     (c-lambda
      (SDL_DisplayMode*/nonnull)
      SDL_DisplayMode
      "___result_voidstar = (SDL_DisplayMode*)___arg1;"))
   (define SDL_DisplayMode-format
     (c-lambda
      (SDL_DisplayMode*/nonnull)
      unsigned-int32
      "___result = ___arg1->format;"))
   (define SDL_DisplayMode-format-set!
     (c-lambda
      (SDL_DisplayMode*/nonnull unsigned-int32)
      void
      "___arg1->format = ___arg2;"))
   (define SDL_DisplayMode-w
     (c-lambda (SDL_DisplayMode*/nonnull) int "___result = ___arg1->w;"))
   (define SDL_DisplayMode-w-set!
     (c-lambda (SDL_DisplayMode*/nonnull int) void "___arg1->w = ___arg2;"))
   (define SDL_DisplayMode-h
     (c-lambda (SDL_DisplayMode*/nonnull) int "___result = ___arg1->h;"))
   (define SDL_DisplayMode-h-set!
     (c-lambda (SDL_DisplayMode*/nonnull int) void "___arg1->h = ___arg2;"))
   (define SDL_DisplayMode-refresh_rate
     (c-lambda
      (SDL_DisplayMode*/nonnull)
      int
      "___result = ___arg1->refresh_rate;"))
   (define SDL_DisplayMode-refresh_rate-set!
     (c-lambda
      (SDL_DisplayMode*/nonnull int)
      void
      "___arg1->refresh_rate = ___arg2;"))
   (define SDL_DisplayMode-driverdata
     (c-lambda
      (SDL_DisplayMode*/nonnull)
      void*
      "___result = ___arg1->driverdata;"))
   (define SDL_DisplayMode-driverdata-set!
     (c-lambda
      (SDL_DisplayMode*/nonnull void*)
      void
      "___arg1->driverdata = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_DollarGestureEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (touchId SDL_TouchID)
  (gestureId SDL_GestureID)
  (numFingers unsigned-int32)
  (error float)
  (x float)
  (y float))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_DollarGestureEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_DollarGestureEvent
     (c-lambda
      ()
      SDL_DollarGestureEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_DollarGestureEvent ) );"))
   (define *->SDL_DollarGestureEvent
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      SDL_DollarGestureEvent
      "___result_voidstar = (SDL_DollarGestureEvent*)___arg1;"))
   (define SDL_DollarGestureEvent-type
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_DollarGestureEvent-type-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_DollarGestureEvent-timestamp
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_DollarGestureEvent-timestamp-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_DollarGestureEvent-touchId
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      SDL_TouchID
      "___result = ___arg1->touchId;"))
   (define SDL_DollarGestureEvent-touchId-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull SDL_TouchID)
      void
      "___arg1->touchId = ___arg2;"))
   (define SDL_DollarGestureEvent-gestureId
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      SDL_GestureID
      "___result = ___arg1->gestureId;"))
   (define SDL_DollarGestureEvent-gestureId-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull SDL_GestureID)
      void
      "___arg1->gestureId = ___arg2;"))
   (define SDL_DollarGestureEvent-numFingers
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->numFingers;"))
   (define SDL_DollarGestureEvent-numFingers-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull unsigned-int32)
      void
      "___arg1->numFingers = ___arg2;"))
   (define SDL_DollarGestureEvent-error
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      float
      "___result = ___arg1->error;"))
   (define SDL_DollarGestureEvent-error-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull float)
      void
      "___arg1->error = ___arg2;"))
   (define SDL_DollarGestureEvent-x
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      float
      "___result = ___arg1->x;"))
   (define SDL_DollarGestureEvent-x-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull float)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_DollarGestureEvent-y
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull)
      float
      "___result = ___arg1->y;"))
   (define SDL_DollarGestureEvent-y-set!
     (c-lambda
      (SDL_DollarGestureEvent*/nonnull float)
      void
      "___arg1->y = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_DropEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (file nonnull-char-string))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_DropEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_DropEvent
     (c-lambda
      ()
      SDL_DropEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_DropEvent ) );"))
   (define *->SDL_DropEvent
     (c-lambda
      (SDL_DropEvent*/nonnull)
      SDL_DropEvent
      "___result_voidstar = (SDL_DropEvent*)___arg1;"))
   (define SDL_DropEvent-type
     (c-lambda
      (SDL_DropEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_DropEvent-type-set!
     (c-lambda
      (SDL_DropEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_DropEvent-timestamp
     (c-lambda
      (SDL_DropEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_DropEvent-timestamp-set!
     (c-lambda
      (SDL_DropEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_DropEvent-file
     (c-lambda
      (SDL_DropEvent*/nonnull)
      nonnull-char-string
      "___result = ___arg1->file;"))
   (define SDL_DropEvent-file-set!
     (c-lambda
      (SDL_DropEvent*/nonnull nonnull-char-string)
      void
      "___arg1->file = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_Event
  (type unsigned-int32)
  (window (struct SDL_WindowEvent))
  (key (struct SDL_KeyboardEvent))
  (edit (struct SDL_TextEditingEvent))
  (text (struct SDL_TextInputEvent))
  (motion (struct SDL_MouseMotionEvent))
  (button (struct SDL_MouseButtonEvent))
  (wheel (struct SDL_MouseWheelEvent))
  (jaxis (struct SDL_JoyAxisEvent))
  (jball (struct SDL_JoyBallEvent))
  (jhat (struct SDL_JoyHatEvent))
  (jbutton (struct SDL_JoyButtonEvent))
  (jdevice (struct SDL_JoyDeviceEvent))
  (caxis (struct SDL_ControllerAxisEvent))
  (cbutton (struct SDL_ControllerButtonEvent))
  (cdevice (struct SDL_ControllerDeviceEvent))
  (quit (struct SDL_QuitEvent))
  (user (struct SDL_UserEvent))
  (syswm (struct SDL_SysWMEvent))
  (tfinger (struct SDL_TouchFingerEvent))
  (mgesture (struct SDL_MultiGestureEvent))
  (dgesture (struct SDL_DollarGestureEvent))
  (drop (struct SDL_DropEvent)))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Event( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Event
     (c-lambda
      ()
      SDL_Event*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( union SDL_Event ) );"))
   (define *->SDL_Event
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_Event
      "___result_voidstar = (SDL_Event*)___arg1;"))
   (define SDL_Event-type
     (c-lambda
      (SDL_Event*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_Event-type-set!
     (c-lambda
      (SDL_Event*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_Event-window
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_WindowEvent*/nonnull
      "___result_voidstar = &___arg1->window;"))
   (define SDL_Event-window-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_WindowEvent)
      void
      "___arg1->window = ___arg2;"))
   (define SDL_Event-key
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_KeyboardEvent*/nonnull
      "___result_voidstar = &___arg1->key;"))
   (define SDL_Event-key-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_KeyboardEvent)
      void
      "___arg1->key = ___arg2;"))
   (define SDL_Event-edit
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_TextEditingEvent*/nonnull
      "___result_voidstar = &___arg1->edit;"))
   (define SDL_Event-edit-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_TextEditingEvent)
      void
      "___arg1->edit = ___arg2;"))
   (define SDL_Event-text
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_TextInputEvent*/nonnull
      "___result_voidstar = &___arg1->text;"))
   (define SDL_Event-text-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_TextInputEvent)
      void
      "___arg1->text = ___arg2;"))
   (define SDL_Event-motion
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_MouseMotionEvent*/nonnull
      "___result_voidstar = &___arg1->motion;"))
   (define SDL_Event-motion-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_MouseMotionEvent)
      void
      "___arg1->motion = ___arg2;"))
   (define SDL_Event-button
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_MouseButtonEvent*/nonnull
      "___result_voidstar = &___arg1->button;"))
   (define SDL_Event-button-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_MouseButtonEvent)
      void
      "___arg1->button = ___arg2;"))
   (define SDL_Event-wheel
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_MouseWheelEvent*/nonnull
      "___result_voidstar = &___arg1->wheel;"))
   (define SDL_Event-wheel-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_MouseWheelEvent)
      void
      "___arg1->wheel = ___arg2;"))
   (define SDL_Event-jaxis
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_JoyAxisEvent*/nonnull
      "___result_voidstar = &___arg1->jaxis;"))
   (define SDL_Event-jaxis-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_JoyAxisEvent)
      void
      "___arg1->jaxis = ___arg2;"))
   (define SDL_Event-jball
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_JoyBallEvent*/nonnull
      "___result_voidstar = &___arg1->jball;"))
   (define SDL_Event-jball-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_JoyBallEvent)
      void
      "___arg1->jball = ___arg2;"))
   (define SDL_Event-jhat
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_JoyHatEvent*/nonnull
      "___result_voidstar = &___arg1->jhat;"))
   (define SDL_Event-jhat-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_JoyHatEvent)
      void
      "___arg1->jhat = ___arg2;"))
   (define SDL_Event-jbutton
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_JoyButtonEvent*/nonnull
      "___result_voidstar = &___arg1->jbutton;"))
   (define SDL_Event-jbutton-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_JoyButtonEvent)
      void
      "___arg1->jbutton = ___arg2;"))
   (define SDL_Event-jdevice
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_JoyDeviceEvent*/nonnull
      "___result_voidstar = &___arg1->jdevice;"))
   (define SDL_Event-jdevice-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_JoyDeviceEvent)
      void
      "___arg1->jdevice = ___arg2;"))
   (define SDL_Event-caxis
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_ControllerAxisEvent*/nonnull
      "___result_voidstar = &___arg1->caxis;"))
   (define SDL_Event-caxis-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_ControllerAxisEvent)
      void
      "___arg1->caxis = ___arg2;"))
   (define SDL_Event-cbutton
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_ControllerButtonEvent*/nonnull
      "___result_voidstar = &___arg1->cbutton;"))
   (define SDL_Event-cbutton-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_ControllerButtonEvent)
      void
      "___arg1->cbutton = ___arg2;"))
   (define SDL_Event-cdevice
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_ControllerDeviceEvent*/nonnull
      "___result_voidstar = &___arg1->cdevice;"))
   (define SDL_Event-cdevice-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_ControllerDeviceEvent)
      void
      "___arg1->cdevice = ___arg2;"))
   (define SDL_Event-quit
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_QuitEvent*/nonnull
      "___result_voidstar = &___arg1->quit;"))
   (define SDL_Event-quit-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_QuitEvent)
      void
      "___arg1->quit = ___arg2;"))
   (define SDL_Event-user
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_UserEvent*/nonnull
      "___result_voidstar = &___arg1->user;"))
   (define SDL_Event-user-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_UserEvent)
      void
      "___arg1->user = ___arg2;"))
   (define SDL_Event-syswm
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_SysWMEvent*/nonnull
      "___result_voidstar = &___arg1->syswm;"))
   (define SDL_Event-syswm-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_SysWMEvent)
      void
      "___arg1->syswm = ___arg2;"))
   (define SDL_Event-tfinger
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_TouchFingerEvent*/nonnull
      "___result_voidstar = &___arg1->tfinger;"))
   (define SDL_Event-tfinger-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_TouchFingerEvent)
      void
      "___arg1->tfinger = ___arg2;"))
   (define SDL_Event-mgesture
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_MultiGestureEvent*/nonnull
      "___result_voidstar = &___arg1->mgesture;"))
   (define SDL_Event-mgesture-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_MultiGestureEvent)
      void
      "___arg1->mgesture = ___arg2;"))
   (define SDL_Event-dgesture
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_DollarGestureEvent*/nonnull
      "___result_voidstar = &___arg1->dgesture;"))
   (define SDL_Event-dgesture-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_DollarGestureEvent)
      void
      "___arg1->dgesture = ___arg2;"))
   (define SDL_Event-drop
     (c-lambda
      (SDL_Event*/nonnull)
      SDL_DropEvent*/nonnull
      "___result_voidstar = &___arg1->drop;"))
   (define SDL_Event-drop-set!
     (c-lambda
      (SDL_Event*/nonnull SDL_DropEvent)
      void
      "___arg1->drop = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_Finger
  (id SDL_FingerID)
  (x float)
  (y float)
  (pressure float))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Finger( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Finger
     (c-lambda
      ()
      SDL_Finger*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Finger ) );"))
   (define *->SDL_Finger
     (c-lambda
      (SDL_Finger*/nonnull)
      SDL_Finger
      "___result_voidstar = (SDL_Finger*)___arg1;"))
   (define SDL_Finger-id
     (c-lambda (SDL_Finger*/nonnull) SDL_FingerID "___result = ___arg1->id;"))
   (define SDL_Finger-id-set!
     (c-lambda
      (SDL_Finger*/nonnull SDL_FingerID)
      void
      "___arg1->id = ___arg2;"))
   (define SDL_Finger-x
     (c-lambda (SDL_Finger*/nonnull) float "___result = ___arg1->x;"))
   (define SDL_Finger-x-set!
     (c-lambda (SDL_Finger*/nonnull float) void "___arg1->x = ___arg2;"))
   (define SDL_Finger-y
     (c-lambda (SDL_Finger*/nonnull) float "___result = ___arg1->y;"))
   (define SDL_Finger-y-set!
     (c-lambda (SDL_Finger*/nonnull float) void "___arg1->y = ___arg2;"))
   (define SDL_Finger-pressure
     (c-lambda (SDL_Finger*/nonnull) float "___result = ___arg1->pressure;"))
   (define SDL_Finger-pressure-set!
     (c-lambda
      (SDL_Finger*/nonnull float)
      void
      "___arg1->pressure = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_Keysym
  (scancode SDL_Scancode)
  (sym SDL_Keycode)
  (mod unsigned-int16))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Keysym( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Keysym
     (c-lambda
      ()
      SDL_Keysym*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Keysym ) );"))
   (define *->SDL_Keysym
     (c-lambda
      (SDL_Keysym*/nonnull)
      SDL_Keysym
      "___result_voidstar = (SDL_Keysym*)___arg1;"))
   (define SDL_Keysym-scancode
     (c-lambda
      (SDL_Keysym*/nonnull)
      SDL_Scancode
      "___result = ___arg1->scancode;"))
   (define SDL_Keysym-scancode-set!
     (c-lambda
      (SDL_Keysym*/nonnull SDL_Scancode)
      void
      "___arg1->scancode = ___arg2;"))
   (define SDL_Keysym-sym
     (c-lambda (SDL_Keysym*/nonnull) SDL_Keycode "___result = ___arg1->sym;"))
   (define SDL_Keysym-sym-set!
     (c-lambda
      (SDL_Keysym*/nonnull SDL_Keycode)
      void
      "___arg1->sym = ___arg2;"))
   (define SDL_Keysym-mod
     (c-lambda
      (SDL_Keysym*/nonnull)
      unsigned-int16
      "___result = ___arg1->mod;"))
   (define SDL_Keysym-mod-set!
     (c-lambda
      (SDL_Keysym*/nonnull unsigned-int16)
      void
      "___arg1->mod = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_KeyboardEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (state unsigned-int8)
  (repeat unsigned-int8)
  (keysym (struct SDL_Keysym)))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_KeyboardEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_KeyboardEvent
     (c-lambda
      ()
      SDL_KeyboardEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_KeyboardEvent ) );"))
   (define *->SDL_KeyboardEvent
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      SDL_KeyboardEvent
      "___result_voidstar = (SDL_KeyboardEvent*)___arg1;"))
   (define SDL_KeyboardEvent-type
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_KeyboardEvent-type-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_KeyboardEvent-timestamp
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_KeyboardEvent-timestamp-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_KeyboardEvent-windowID
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_KeyboardEvent-windowID-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_KeyboardEvent-state
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->state;"))
   (define SDL_KeyboardEvent-state-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull unsigned-int8)
      void
      "___arg1->state = ___arg2;"))
   (define SDL_KeyboardEvent-repeat
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->repeat;"))
   (define SDL_KeyboardEvent-repeat-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull unsigned-int8)
      void
      "___arg1->repeat = ___arg2;"))
   (define SDL_KeyboardEvent-keysym
     (c-lambda
      (SDL_KeyboardEvent*/nonnull)
      SDL_Keysym*/nonnull
      "___result_voidstar = &___arg1->keysym;"))
   (define SDL_KeyboardEvent-keysym-set!
     (c-lambda
      (SDL_KeyboardEvent*/nonnull SDL_Keysym)
      void
      "___arg1->keysym = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_MouseButtonEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (which unsigned-int32)
  (button unsigned-int8)
  (state unsigned-int8)
  (clicks unsigned-int8)
  (x int)
  (y int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_MouseButtonEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_MouseButtonEvent
     (c-lambda
      ()
      SDL_MouseButtonEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_MouseButtonEvent ) );"))
   (define *->SDL_MouseButtonEvent
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      SDL_MouseButtonEvent
      "___result_voidstar = (SDL_MouseButtonEvent*)___arg1;"))
   (define SDL_MouseButtonEvent-type
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_MouseButtonEvent-type-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_MouseButtonEvent-timestamp
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_MouseButtonEvent-timestamp-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_MouseButtonEvent-windowID
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_MouseButtonEvent-windowID-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_MouseButtonEvent-which
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->which;"))
   (define SDL_MouseButtonEvent-which-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int32)
      void
      "___arg1->which = ___arg2;"))
   (define SDL_MouseButtonEvent-button
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->button;"))
   (define SDL_MouseButtonEvent-button-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int8)
      void
      "___arg1->button = ___arg2;"))
   (define SDL_MouseButtonEvent-state
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->state;"))
   (define SDL_MouseButtonEvent-state-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int8)
      void
      "___arg1->state = ___arg2;"))
   (define SDL_MouseButtonEvent-clicks
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->clicks;"))
   (define SDL_MouseButtonEvent-clicks-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull unsigned-int8)
      void
      "___arg1->clicks = ___arg2;"))
   (define SDL_MouseButtonEvent-x
     (c-lambda (SDL_MouseButtonEvent*/nonnull) int "___result = ___arg1->x;"))
   (define SDL_MouseButtonEvent-x-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull int)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_MouseButtonEvent-y
     (c-lambda (SDL_MouseButtonEvent*/nonnull) int "___result = ___arg1->y;"))
   (define SDL_MouseButtonEvent-y-set!
     (c-lambda
      (SDL_MouseButtonEvent*/nonnull int)
      void
      "___arg1->y = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_MouseMotionEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (which unsigned-int32)
  (state unsigned-int32)
  (x int32)
  (y int32)
  (xrel int32)
  (yrel int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_MouseMotionEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_MouseMotionEvent
     (c-lambda
      ()
      SDL_MouseMotionEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_MouseMotionEvent ) );"))
   (define *->SDL_MouseMotionEvent
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      SDL_MouseMotionEvent
      "___result_voidstar = (SDL_MouseMotionEvent*)___arg1;"))
   (define SDL_MouseMotionEvent-type
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_MouseMotionEvent-type-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_MouseMotionEvent-timestamp
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_MouseMotionEvent-timestamp-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_MouseMotionEvent-windowID
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_MouseMotionEvent-windowID-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_MouseMotionEvent-which
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->which;"))
   (define SDL_MouseMotionEvent-which-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull unsigned-int32)
      void
      "___arg1->which = ___arg2;"))
   (define SDL_MouseMotionEvent-state
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->state;"))
   (define SDL_MouseMotionEvent-state-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull unsigned-int32)
      void
      "___arg1->state = ___arg2;"))
   (define SDL_MouseMotionEvent-x
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      int32
      "___result = ___arg1->x;"))
   (define SDL_MouseMotionEvent-x-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull int32)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_MouseMotionEvent-y
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      int32
      "___result = ___arg1->y;"))
   (define SDL_MouseMotionEvent-y-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull int32)
      void
      "___arg1->y = ___arg2;"))
   (define SDL_MouseMotionEvent-xrel
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      int32
      "___result = ___arg1->xrel;"))
   (define SDL_MouseMotionEvent-xrel-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull int32)
      void
      "___arg1->xrel = ___arg2;"))
   (define SDL_MouseMotionEvent-yrel
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull)
      int32
      "___result = ___arg1->yrel;"))
   (define SDL_MouseMotionEvent-yrel-set!
     (c-lambda
      (SDL_MouseMotionEvent*/nonnull int32)
      void
      "___arg1->yrel = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_MouseWheelEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (which unsigned-int32)
  (x int32)
  (y int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_MouseWheelEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_MouseWheelEvent
     (c-lambda
      ()
      SDL_MouseWheelEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_MouseWheelEvent ) );"))
   (define *->SDL_MouseWheelEvent
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull)
      SDL_MouseWheelEvent
      "___result_voidstar = (SDL_MouseWheelEvent*)___arg1;"))
   (define SDL_MouseWheelEvent-type
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_MouseWheelEvent-type-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_MouseWheelEvent-timestamp
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_MouseWheelEvent-timestamp-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_MouseWheelEvent-windowID
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_MouseWheelEvent-windowID-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_MouseWheelEvent-which
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->which;"))
   (define SDL_MouseWheelEvent-which-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull unsigned-int32)
      void
      "___arg1->which = ___arg2;"))
   (define SDL_MouseWheelEvent-x
     (c-lambda (SDL_MouseWheelEvent*/nonnull) int32 "___result = ___arg1->x;"))
   (define SDL_MouseWheelEvent-x-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull int32)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_MouseWheelEvent-y
     (c-lambda (SDL_MouseWheelEvent*/nonnull) int32 "___result = ___arg1->y;"))
   (define SDL_MouseWheelEvent-y-set!
     (c-lambda
      (SDL_MouseWheelEvent*/nonnull int32)
      void
      "___arg1->y = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_MultiGestureEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (touchId SDL_TouchID)
  (dTheta float)
  (dDist float)
  (x float)
  (y float)
  (numFingers unsigned-int16))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_MultiGestureEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_MultiGestureEvent
     (c-lambda
      ()
      SDL_MultiGestureEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_MultiGestureEvent ) );"))
   (define *->SDL_MultiGestureEvent
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      SDL_MultiGestureEvent
      "___result_voidstar = (SDL_MultiGestureEvent*)___arg1;"))
   (define SDL_MultiGestureEvent-type
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_MultiGestureEvent-type-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_MultiGestureEvent-timestamp
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_MultiGestureEvent-timestamp-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_MultiGestureEvent-touchId
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      SDL_TouchID
      "___result = ___arg1->touchId;"))
   (define SDL_MultiGestureEvent-touchId-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull SDL_TouchID)
      void
      "___arg1->touchId = ___arg2;"))
   (define SDL_MultiGestureEvent-dTheta
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      float
      "___result = ___arg1->dTheta;"))
   (define SDL_MultiGestureEvent-dTheta-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull float)
      void
      "___arg1->dTheta = ___arg2;"))
   (define SDL_MultiGestureEvent-dDist
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      float
      "___result = ___arg1->dDist;"))
   (define SDL_MultiGestureEvent-dDist-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull float)
      void
      "___arg1->dDist = ___arg2;"))
   (define SDL_MultiGestureEvent-x
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      float
      "___result = ___arg1->x;"))
   (define SDL_MultiGestureEvent-x-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull float)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_MultiGestureEvent-y
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      float
      "___result = ___arg1->y;"))
   (define SDL_MultiGestureEvent-y-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull float)
      void
      "___arg1->y = ___arg2;"))
   (define SDL_MultiGestureEvent-numFingers
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull)
      unsigned-int16
      "___result = ___arg1->numFingers;"))
   (define SDL_MultiGestureEvent-numFingers-set!
     (c-lambda
      (SDL_MultiGestureEvent*/nonnull unsigned-int16)
      void
      "___arg1->numFingers = ___arg2;"))))
(definition:
 (c-define-struct SDL_Palette (ncolors int) (colors (struct-array SDL_Color)))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Palette( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Palette
     (c-lambda
      ()
      SDL_Palette*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Palette ) );"))
   (define *->SDL_Palette
     (c-lambda
      (SDL_Palette*/nonnull)
      SDL_Palette
      "___result_voidstar = (SDL_Palette*)___arg1;"))
   (define SDL_Palette-ncolors
     (c-lambda (SDL_Palette*/nonnull) int "___result = ___arg1->ncolors;"))
   (define SDL_Palette-ncolors-set!
     (c-lambda (SDL_Palette*/nonnull int) void "___arg1->ncolors = ___arg2;"))
   (define SDL_Palette-colors-ref
     (c-lambda
      (SDL_Palette*/nonnull int)
      SDL_Color*/nonnull
      "___result_voidstar = &___arg1->colors[___arg2];"))))
(definition:
 (c-define-struct
  SDL_PixelFormat
  (format unsigned-int32)
  (palette SDL_Palette*)
  (BitsPerPixel unsigned-int8)
  (BytesPerPixel unsigned-int8)
  (Rmask unsigned-int32)
  (Gmask unsigned-int32)
  (Bmask unsigned-int32)
  (Amask unsigned-int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_PixelFormat( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_PixelFormat
     (c-lambda
      ()
      SDL_PixelFormat*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_PixelFormat ) );"))
   (define *->SDL_PixelFormat
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      SDL_PixelFormat
      "___result_voidstar = (SDL_PixelFormat*)___arg1;"))
   (define SDL_PixelFormat-format
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int32
      "___result = ___arg1->format;"))
   (define SDL_PixelFormat-format-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int32)
      void
      "___arg1->format = ___arg2;"))
   (define SDL_PixelFormat-palette
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      SDL_Palette*
      "___result = ___arg1->palette;"))
   (define SDL_PixelFormat-palette-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull SDL_Palette*)
      void
      "___arg1->palette = ___arg2;"))
   (define SDL_PixelFormat-BitsPerPixel
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int8
      "___result = ___arg1->BitsPerPixel;"))
   (define SDL_PixelFormat-BitsPerPixel-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int8)
      void
      "___arg1->BitsPerPixel = ___arg2;"))
   (define SDL_PixelFormat-BytesPerPixel
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int8
      "___result = ___arg1->BytesPerPixel;"))
   (define SDL_PixelFormat-BytesPerPixel-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int8)
      void
      "___arg1->BytesPerPixel = ___arg2;"))
   (define SDL_PixelFormat-Rmask
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int32
      "___result = ___arg1->Rmask;"))
   (define SDL_PixelFormat-Rmask-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int32)
      void
      "___arg1->Rmask = ___arg2;"))
   (define SDL_PixelFormat-Gmask
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int32
      "___result = ___arg1->Gmask;"))
   (define SDL_PixelFormat-Gmask-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int32)
      void
      "___arg1->Gmask = ___arg2;"))
   (define SDL_PixelFormat-Bmask
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int32
      "___result = ___arg1->Bmask;"))
   (define SDL_PixelFormat-Bmask-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int32)
      void
      "___arg1->Bmask = ___arg2;"))
   (define SDL_PixelFormat-Amask
     (c-lambda
      (SDL_PixelFormat*/nonnull)
      unsigned-int32
      "___result = ___arg1->Amask;"))
   (define SDL_PixelFormat-Amask-set!
     (c-lambda
      (SDL_PixelFormat*/nonnull unsigned-int32)
      void
      "___arg1->Amask = ___arg2;"))))
(definition:
 (c-define-struct SDL_Point (x int) (y int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Point( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Point
     (c-lambda
      ()
      SDL_Point*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Point ) );"))
   (define *->SDL_Point
     (c-lambda
      (SDL_Point*/nonnull)
      SDL_Point
      "___result_voidstar = (SDL_Point*)___arg1;"))
   (define SDL_Point-x
     (c-lambda (SDL_Point*/nonnull) int "___result = ___arg1->x;"))
   (define SDL_Point-x-set!
     (c-lambda (SDL_Point*/nonnull int) void "___arg1->x = ___arg2;"))
   (define SDL_Point-y
     (c-lambda (SDL_Point*/nonnull) int "___result = ___arg1->y;"))
   (define SDL_Point-y-set!
     (c-lambda (SDL_Point*/nonnull int) void "___arg1->y = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_QuitEvent
  (type unsigned-int32)
  (timestamp unsigned-int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_QuitEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_QuitEvent
     (c-lambda
      ()
      SDL_QuitEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_QuitEvent ) );"))
   (define *->SDL_QuitEvent
     (c-lambda
      (SDL_QuitEvent*/nonnull)
      SDL_QuitEvent
      "___result_voidstar = (SDL_QuitEvent*)___arg1;"))
   (define SDL_QuitEvent-type
     (c-lambda
      (SDL_QuitEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_QuitEvent-type-set!
     (c-lambda
      (SDL_QuitEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_QuitEvent-timestamp
     (c-lambda
      (SDL_QuitEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_QuitEvent-timestamp-set!
     (c-lambda
      (SDL_QuitEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))))
(definition:
 (c-define-struct SDL_Rect (x int) (y int) (w int) (h int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Rect( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Rect
     (c-lambda
      ()
      SDL_Rect*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Rect ) );"))
   (define *->SDL_Rect
     (c-lambda
      (SDL_Rect*/nonnull)
      SDL_Rect
      "___result_voidstar = (SDL_Rect*)___arg1;"))
   (define SDL_Rect-x
     (c-lambda (SDL_Rect*/nonnull) int "___result = ___arg1->x;"))
   (define SDL_Rect-x-set!
     (c-lambda (SDL_Rect*/nonnull int) void "___arg1->x = ___arg2;"))
   (define SDL_Rect-y
     (c-lambda (SDL_Rect*/nonnull) int "___result = ___arg1->y;"))
   (define SDL_Rect-y-set!
     (c-lambda (SDL_Rect*/nonnull int) void "___arg1->y = ___arg2;"))
   (define SDL_Rect-w
     (c-lambda (SDL_Rect*/nonnull) int "___result = ___arg1->w;"))
   (define SDL_Rect-w-set!
     (c-lambda (SDL_Rect*/nonnull int) void "___arg1->w = ___arg2;"))
   (define SDL_Rect-h
     (c-lambda (SDL_Rect*/nonnull) int "___result = ___arg1->h;"))
   (define SDL_Rect-h-set!
     (c-lambda (SDL_Rect*/nonnull int) void "___arg1->h = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_RendererInfo
  (name nonnull-char-string)
  (flags unsigned-int32)
  (num_texture_formats unsigned-int32)
  (texture_formats (array unsigned-int32))
  (max_texture_width int)
  (max_texture_height int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_RendererInfo( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_RendererInfo
     (c-lambda
      ()
      SDL_RendererInfo*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_RendererInfo ) );"))
   (define *->SDL_RendererInfo
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      SDL_RendererInfo
      "___result_voidstar = (SDL_RendererInfo*)___arg1;"))
   (define SDL_RendererInfo-name
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      nonnull-char-string
      "___result = ___arg1->name;"))
   (define SDL_RendererInfo-name-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull nonnull-char-string)
      void
      "___arg1->name = ___arg2;"))
   (define SDL_RendererInfo-flags
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      unsigned-int32
      "___result = ___arg1->flags;"))
   (define SDL_RendererInfo-flags-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull unsigned-int32)
      void
      "___arg1->flags = ___arg2;"))
   (define SDL_RendererInfo-num_texture_formats
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      unsigned-int32
      "___result = ___arg1->num_texture_formats;"))
   (define SDL_RendererInfo-num_texture_formats-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull unsigned-int32)
      void
      "___arg1->num_texture_formats = ___arg2;"))
   (define SDL_RendererInfo-texture_formats-ref
     (c-lambda
      (SDL_RendererInfo*/nonnull int)
      unsigned-int32
      "___result = ___arg1->texture_formats[___arg2];"))
   (define SDL_RendererInfo-texture_formats-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull int unsigned-int32)
      void
      "___arg1->texture_formats[___arg2] = ___arg3;"))
   (define SDL_RendererInfo-max_texture_width
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      int
      "___result = ___arg1->max_texture_width;"))
   (define SDL_RendererInfo-max_texture_width-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull int)
      void
      "___arg1->max_texture_width = ___arg2;"))
   (define SDL_RendererInfo-max_texture_height
     (c-lambda
      (SDL_RendererInfo*/nonnull)
      int
      "___result = ___arg1->max_texture_height;"))
   (define SDL_RendererInfo-max_texture_height-set!
     (c-lambda
      (SDL_RendererInfo*/nonnull int)
      void
      "___arg1->max_texture_height = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_Surface
  (format SDL_PixelFormat*)
  (w int)
  (h int)
  (pitch int)
  (pixels void*)
  (userdata void*)
  (clip_rect (struct SDL_Rect))
  (refcount int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_Surface( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_Surface
     (c-lambda
      ()
      SDL_Surface*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_Surface ) );"))
   (define *->SDL_Surface
     (c-lambda
      (SDL_Surface*/nonnull)
      SDL_Surface
      "___result_voidstar = (SDL_Surface*)___arg1;"))
   (define SDL_Surface-format
     (c-lambda
      (SDL_Surface*/nonnull)
      SDL_PixelFormat*
      "___result = ___arg1->format;"))
   (define SDL_Surface-format-set!
     (c-lambda
      (SDL_Surface*/nonnull SDL_PixelFormat*)
      void
      "___arg1->format = ___arg2;"))
   (define SDL_Surface-w
     (c-lambda (SDL_Surface*/nonnull) int "___result = ___arg1->w;"))
   (define SDL_Surface-w-set!
     (c-lambda (SDL_Surface*/nonnull int) void "___arg1->w = ___arg2;"))
   (define SDL_Surface-h
     (c-lambda (SDL_Surface*/nonnull) int "___result = ___arg1->h;"))
   (define SDL_Surface-h-set!
     (c-lambda (SDL_Surface*/nonnull int) void "___arg1->h = ___arg2;"))
   (define SDL_Surface-pitch
     (c-lambda (SDL_Surface*/nonnull) int "___result = ___arg1->pitch;"))
   (define SDL_Surface-pitch-set!
     (c-lambda (SDL_Surface*/nonnull int) void "___arg1->pitch = ___arg2;"))
   (define SDL_Surface-pixels
     (c-lambda (SDL_Surface*/nonnull) void* "___result = ___arg1->pixels;"))
   (define SDL_Surface-pixels-set!
     (c-lambda (SDL_Surface*/nonnull void*) void "___arg1->pixels = ___arg2;"))
   (define SDL_Surface-userdata
     (c-lambda (SDL_Surface*/nonnull) void* "___result = ___arg1->userdata;"))
   (define SDL_Surface-userdata-set!
     (c-lambda
      (SDL_Surface*/nonnull void*)
      void
      "___arg1->userdata = ___arg2;"))
   (define SDL_Surface-clip_rect
     (c-lambda
      (SDL_Surface*/nonnull)
      SDL_Rect*/nonnull
      "___result_voidstar = &___arg1->clip_rect;"))
   (define SDL_Surface-clip_rect-set!
     (c-lambda
      (SDL_Surface*/nonnull SDL_Rect)
      void
      "___arg1->clip_rect = ___arg2;"))
   (define SDL_Surface-refcount
     (c-lambda (SDL_Surface*/nonnull) int "___result = ___arg1->refcount;"))
   (define SDL_Surface-refcount-set!
     (c-lambda
      (SDL_Surface*/nonnull int)
      void
      "___arg1->refcount = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_SysWMEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (msg SDL_SysWMmsg*))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_SysWMEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_SysWMEvent
     (c-lambda
      ()
      SDL_SysWMEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_SysWMEvent ) );"))
   (define *->SDL_SysWMEvent
     (c-lambda
      (SDL_SysWMEvent*/nonnull)
      SDL_SysWMEvent
      "___result_voidstar = (SDL_SysWMEvent*)___arg1;"))
   (define SDL_SysWMEvent-type
     (c-lambda
      (SDL_SysWMEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_SysWMEvent-type-set!
     (c-lambda
      (SDL_SysWMEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_SysWMEvent-timestamp
     (c-lambda
      (SDL_SysWMEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_SysWMEvent-timestamp-set!
     (c-lambda
      (SDL_SysWMEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_SysWMEvent-msg
     (c-lambda
      (SDL_SysWMEvent*/nonnull)
      SDL_SysWMmsg*
      "___result = ___arg1->msg;"))
   (define SDL_SysWMEvent-msg-set!
     (c-lambda
      (SDL_SysWMEvent*/nonnull SDL_SysWMmsg*)
      void
      "___arg1->msg = ___arg2;"))))
(definition:
 (c-define-struct SDL_SysWMinfo (version (struct SDL_version)) (subsystem int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_SysWMinfo( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_SysWMinfo
     (c-lambda
      ()
      SDL_SysWMinfo*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_SysWMinfo ) );"))
   (define *->SDL_SysWMinfo
     (c-lambda
      (SDL_SysWMinfo*/nonnull)
      SDL_SysWMinfo
      "___result_voidstar = (SDL_SysWMinfo*)___arg1;"))
   (define SDL_SysWMinfo-version
     (c-lambda
      (SDL_SysWMinfo*/nonnull)
      SDL_version*/nonnull
      "___result_voidstar = &___arg1->version;"))
   (define SDL_SysWMinfo-version-set!
     (c-lambda
      (SDL_SysWMinfo*/nonnull SDL_version)
      void
      "___arg1->version = ___arg2;"))
   (define SDL_SysWMinfo-subsystem
     (c-lambda (SDL_SysWMinfo*/nonnull) int "___result = ___arg1->subsystem;"))
   (define SDL_SysWMinfo-subsystem-set!
     (c-lambda
      (SDL_SysWMinfo*/nonnull int)
      void
      "___arg1->subsystem = ___arg2;"))))
(definition:
 (c-define-struct SDL_SysWMmsg (version (struct SDL_version)) (subsystem int))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_SysWMmsg( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_SysWMmsg
     (c-lambda
      ()
      SDL_SysWMmsg*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_SysWMmsg ) );"))
   (define *->SDL_SysWMmsg
     (c-lambda
      (SDL_SysWMmsg*/nonnull)
      SDL_SysWMmsg
      "___result_voidstar = (SDL_SysWMmsg*)___arg1;"))
   (define SDL_SysWMmsg-version
     (c-lambda
      (SDL_SysWMmsg*/nonnull)
      SDL_version*/nonnull
      "___result_voidstar = &___arg1->version;"))
   (define SDL_SysWMmsg-version-set!
     (c-lambda
      (SDL_SysWMmsg*/nonnull SDL_version)
      void
      "___arg1->version = ___arg2;"))
   (define SDL_SysWMmsg-subsystem
     (c-lambda (SDL_SysWMmsg*/nonnull) int "___result = ___arg1->subsystem;"))
   (define SDL_SysWMmsg-subsystem-set!
     (c-lambda
      (SDL_SysWMmsg*/nonnull int)
      void
      "___arg1->subsystem = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_TextEditingEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (text (array char))
  (start int32)
  (length int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_TextEditingEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_TextEditingEvent
     (c-lambda
      ()
      SDL_TextEditingEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_TextEditingEvent ) );"))
   (define *->SDL_TextEditingEvent
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      SDL_TextEditingEvent
      "___result_voidstar = (SDL_TextEditingEvent*)___arg1;"))
   (define SDL_TextEditingEvent-type
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_TextEditingEvent-type-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_TextEditingEvent-timestamp
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_TextEditingEvent-timestamp-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_TextEditingEvent-windowID
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_TextEditingEvent-windowID-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_TextEditingEvent-text-ref
     (c-lambda
      (SDL_TextEditingEvent*/nonnull int)
      char
      "___result = ___arg1->text[___arg2];"))
   (define SDL_TextEditingEvent-text-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull int char)
      void
      "___arg1->text[___arg2] = ___arg3;"))
   (define SDL_TextEditingEvent-start
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      int32
      "___result = ___arg1->start;"))
   (define SDL_TextEditingEvent-start-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull int32)
      void
      "___arg1->start = ___arg2;"))
   (define SDL_TextEditingEvent-length
     (c-lambda
      (SDL_TextEditingEvent*/nonnull)
      int32
      "___result = ___arg1->length;"))
   (define SDL_TextEditingEvent-length-set!
     (c-lambda
      (SDL_TextEditingEvent*/nonnull int32)
      void
      "___arg1->length = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_TextInputEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (text (array char)))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_TextInputEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_TextInputEvent
     (c-lambda
      ()
      SDL_TextInputEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_TextInputEvent ) );"))
   (define *->SDL_TextInputEvent
     (c-lambda
      (SDL_TextInputEvent*/nonnull)
      SDL_TextInputEvent
      "___result_voidstar = (SDL_TextInputEvent*)___arg1;"))
   (define SDL_TextInputEvent-type
     (c-lambda
      (SDL_TextInputEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_TextInputEvent-type-set!
     (c-lambda
      (SDL_TextInputEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_TextInputEvent-timestamp
     (c-lambda
      (SDL_TextInputEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_TextInputEvent-timestamp-set!
     (c-lambda
      (SDL_TextInputEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_TextInputEvent-windowID
     (c-lambda
      (SDL_TextInputEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_TextInputEvent-windowID-set!
     (c-lambda
      (SDL_TextInputEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_TextInputEvent-text-ref
     (c-lambda
      (SDL_TextInputEvent*/nonnull int)
      char
      "___result = ___arg1->text[___arg2];"))
   (define SDL_TextInputEvent-text-set!
     (c-lambda
      (SDL_TextInputEvent*/nonnull int char)
      void
      "___arg1->text[___arg2] = ___arg3;"))))
(definition:
 (c-define-struct
  SDL_TouchFingerEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (touchId SDL_TouchID)
  (fingerId SDL_FingerID)
  (x float)
  (y float)
  (dx float)
  (dy float)
  (pressure float))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_TouchFingerEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_TouchFingerEvent
     (c-lambda
      ()
      SDL_TouchFingerEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_TouchFingerEvent ) );"))
   (define *->SDL_TouchFingerEvent
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      SDL_TouchFingerEvent
      "___result_voidstar = (SDL_TouchFingerEvent*)___arg1;"))
   (define SDL_TouchFingerEvent-type
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_TouchFingerEvent-type-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_TouchFingerEvent-timestamp
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_TouchFingerEvent-timestamp-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_TouchFingerEvent-touchId
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      SDL_TouchID
      "___result = ___arg1->touchId;"))
   (define SDL_TouchFingerEvent-touchId-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull SDL_TouchID)
      void
      "___arg1->touchId = ___arg2;"))
   (define SDL_TouchFingerEvent-fingerId
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      SDL_FingerID
      "___result = ___arg1->fingerId;"))
   (define SDL_TouchFingerEvent-fingerId-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull SDL_FingerID)
      void
      "___arg1->fingerId = ___arg2;"))
   (define SDL_TouchFingerEvent-x
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      float
      "___result = ___arg1->x;"))
   (define SDL_TouchFingerEvent-x-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull float)
      void
      "___arg1->x = ___arg2;"))
   (define SDL_TouchFingerEvent-y
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      float
      "___result = ___arg1->y;"))
   (define SDL_TouchFingerEvent-y-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull float)
      void
      "___arg1->y = ___arg2;"))
   (define SDL_TouchFingerEvent-dx
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      float
      "___result = ___arg1->dx;"))
   (define SDL_TouchFingerEvent-dx-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull float)
      void
      "___arg1->dx = ___arg2;"))
   (define SDL_TouchFingerEvent-dy
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      float
      "___result = ___arg1->dy;"))
   (define SDL_TouchFingerEvent-dy-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull float)
      void
      "___arg1->dy = ___arg2;"))
   (define SDL_TouchFingerEvent-pressure
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull)
      float
      "___result = ___arg1->pressure;"))
   (define SDL_TouchFingerEvent-pressure-set!
     (c-lambda
      (SDL_TouchFingerEvent*/nonnull float)
      void
      "___arg1->pressure = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_UserEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (code int32)
  (data1 void*)
  (data2 void*))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_UserEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_UserEvent
     (c-lambda
      ()
      SDL_UserEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_UserEvent ) );"))
   (define *->SDL_UserEvent
     (c-lambda
      (SDL_UserEvent*/nonnull)
      SDL_UserEvent
      "___result_voidstar = (SDL_UserEvent*)___arg1;"))
   (define SDL_UserEvent-type
     (c-lambda
      (SDL_UserEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_UserEvent-type-set!
     (c-lambda
      (SDL_UserEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_UserEvent-timestamp
     (c-lambda
      (SDL_UserEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_UserEvent-timestamp-set!
     (c-lambda
      (SDL_UserEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_UserEvent-windowID
     (c-lambda
      (SDL_UserEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_UserEvent-windowID-set!
     (c-lambda
      (SDL_UserEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_UserEvent-code
     (c-lambda (SDL_UserEvent*/nonnull) int32 "___result = ___arg1->code;"))
   (define SDL_UserEvent-code-set!
     (c-lambda (SDL_UserEvent*/nonnull int32) void "___arg1->code = ___arg2;"))
   (define SDL_UserEvent-data1
     (c-lambda (SDL_UserEvent*/nonnull) void* "___result = ___arg1->data1;"))
   (define SDL_UserEvent-data1-set!
     (c-lambda
      (SDL_UserEvent*/nonnull void*)
      void
      "___arg1->data1 = ___arg2;"))
   (define SDL_UserEvent-data2
     (c-lambda (SDL_UserEvent*/nonnull) void* "___result = ___arg1->data2;"))
   (define SDL_UserEvent-data2-set!
     (c-lambda
      (SDL_UserEvent*/nonnull void*)
      void
      "___arg1->data2 = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_WindowEvent
  (type unsigned-int32)
  (timestamp unsigned-int32)
  (windowID unsigned-int32)
  (event unsigned-int8)
  (data1 int32)
  (data2 int32))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_WindowEvent( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_WindowEvent
     (c-lambda
      ()
      SDL_WindowEvent*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_WindowEvent ) );"))
   (define *->SDL_WindowEvent
     (c-lambda
      (SDL_WindowEvent*/nonnull)
      SDL_WindowEvent
      "___result_voidstar = (SDL_WindowEvent*)___arg1;"))
   (define SDL_WindowEvent-type
     (c-lambda
      (SDL_WindowEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->type;"))
   (define SDL_WindowEvent-type-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull unsigned-int32)
      void
      "___arg1->type = ___arg2;"))
   (define SDL_WindowEvent-timestamp
     (c-lambda
      (SDL_WindowEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->timestamp;"))
   (define SDL_WindowEvent-timestamp-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull unsigned-int32)
      void
      "___arg1->timestamp = ___arg2;"))
   (define SDL_WindowEvent-windowID
     (c-lambda
      (SDL_WindowEvent*/nonnull)
      unsigned-int32
      "___result = ___arg1->windowID;"))
   (define SDL_WindowEvent-windowID-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull unsigned-int32)
      void
      "___arg1->windowID = ___arg2;"))
   (define SDL_WindowEvent-event
     (c-lambda
      (SDL_WindowEvent*/nonnull)
      unsigned-int8
      "___result = ___arg1->event;"))
   (define SDL_WindowEvent-event-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull unsigned-int8)
      void
      "___arg1->event = ___arg2;"))
   (define SDL_WindowEvent-data1
     (c-lambda (SDL_WindowEvent*/nonnull) int32 "___result = ___arg1->data1;"))
   (define SDL_WindowEvent-data1-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull int32)
      void
      "___arg1->data1 = ___arg2;"))
   (define SDL_WindowEvent-data2
     (c-lambda (SDL_WindowEvent*/nonnull) int32 "___result = ___arg1->data2;"))
   (define SDL_WindowEvent-data2-set!
     (c-lambda
      (SDL_WindowEvent*/nonnull int32)
      void
      "___arg1->data2 = ___arg2;"))))
(definition:
 (c-define-struct
  SDL_version
  (major unsigned-int8)
  (minor unsigned-int8)
  (patch unsigned-int8))
 expansion:
 (begin
   (c-declare
    "static ___SCMOBJ ___release_SDL_version( void* ptr )\n{\n  ___EXT(___release_rc)( ptr );\n  return ___FIX(___NO_ERR);\n}\n")
   (define alloc-SDL_version
     (c-lambda
      ()
      SDL_version*/release-rc
      "___result_voidstar = ___EXT(___alloc_rc)( sizeof( struct SDL_version ) );"))
   (define *->SDL_version
     (c-lambda
      (SDL_version*/nonnull)
      SDL_version
      "___result_voidstar = (SDL_version*)___arg1;"))
   (define SDL_version-major
     (c-lambda
      (SDL_version*/nonnull)
      unsigned-int8
      "___result = ___arg1->major;"))
   (define SDL_version-major-set!
     (c-lambda
      (SDL_version*/nonnull unsigned-int8)
      void
      "___arg1->major = ___arg2;"))
   (define SDL_version-minor
     (c-lambda
      (SDL_version*/nonnull)
      unsigned-int8
      "___result = ___arg1->minor;"))
   (define SDL_version-minor-set!
     (c-lambda
      (SDL_version*/nonnull unsigned-int8)
      void
      "___arg1->minor = ___arg2;"))
   (define SDL_version-patch
     (c-lambda
      (SDL_version*/nonnull)
      unsigned-int8
      "___result = ___arg1->patch;"))
   (define SDL_version-patch-set!
     (c-lambda
      (SDL_version*/nonnull unsigned-int8)
      void
      "___arg1->patch = ___arg2;"))))
Expansion:

#!void

#!void

#!void

#!void

#!void

#!void

#!void

#!void

(define sdl2#g57c-constants sdl2#0)

(define sdl2#SDL_INIT_TIMER (sdl2#0 0))

(define sdl2#SDL_INIT_AUDIO (sdl2#0 1))

(define sdl2#SDL_INIT_VIDEO (sdl2#0 2))

(define sdl2#SDL_INIT_JOYSTICK (sdl2#0 3))

(define sdl2#SDL_INIT_HAPTIC (sdl2#0 4))

(define sdl2#SDL_INIT_GAMECONTROLLER (sdl2#0 5))

(define sdl2#SDL_INIT_EVENTS (sdl2#0 6))

(define sdl2#SDL_INIT_NOPARACHUTE (sdl2#0 7))

(define sdl2#SDL_INIT_EVERYTHING (sdl2#0 8))

(define sdl2#g58c-constants sdl2#1)

(define sdl2#SDL_AUDIO_MASK_BITSIZE (sdl2#1 0))

(define sdl2#SDL_AUDIO_MASK_DATATYPE (sdl2#1 1))

(define sdl2#SDL_AUDIO_MASK_ENDIAN (sdl2#1 2))

(define sdl2#SDL_AUDIO_MASK_SIGNED (sdl2#1 3))

(define sdl2#SDL_AUDIO_BITSIZE sdl2#2)

(define sdl2#SDL_AUDIO_ISFLOAT sdl2#3)

(define sdl2#SDL_AUDIO_ISBIGENDIAN sdl2#4)

(define sdl2#SDL_AUDIO_ISSIGNED sdl2#5)

(define sdl2#SDL_AUDIO_ISINT sdl2#6)

(define sdl2#SDL_AUDIO_ISLITTLEENDIAN sdl2#7)

(define sdl2#SDL_AUDIO_ISUNSIGNED sdl2#8)

(define sdl2#g59c-constants sdl2#9)

(define sdl2#AUDIO_U8 (sdl2#9 0))

(define sdl2#AUDIO_S8 (sdl2#9 1))

(define sdl2#AUDIO_U16LSB (sdl2#9 2))

(define sdl2#AUDIO_S16LSB (sdl2#9 3))

(define sdl2#AUDIO_U16MSB (sdl2#9 4))

(define sdl2#AUDIO_S16MSB (sdl2#9 5))

(define sdl2#AUDIO_U16 (sdl2#9 6))

(define sdl2#AUDIO_S16 (sdl2#9 7))

(define sdl2#AUDIO_S32LSB (sdl2#9 8))

(define sdl2#AUDIO_S32MSB (sdl2#9 9))

(define sdl2#AUDIO_S32 (sdl2#9 10))

(define sdl2#AUDIO_F32LSB (sdl2#9 11))

(define sdl2#AUDIO_F32MSB (sdl2#9 12))

(define sdl2#AUDIO_F32 (sdl2#9 13))

(define sdl2#AUDIO_U16SYS (sdl2#9 14))

(define sdl2#AUDIO_S16SYS (sdl2#9 15))

(define sdl2#AUDIO_S32SYS (sdl2#9 16))

(define sdl2#AUDIO_F32SYS (sdl2#9 17))

(define sdl2#g60c-constants sdl2#10)

(define sdl2#SDL_AUDIO_STOPPED (sdl2#10 0))

(define sdl2#SDL_AUDIO_PLAYING (sdl2#10 1))

(define sdl2#SDL_AUDIO_PAUSED (sdl2#10 2))

(define sdl2#g61c-constants sdl2#11)

(define sdl2#SDL_BLENDMODE_NONE (sdl2#11 0))

(define sdl2#SDL_BLENDMODE_BLEND (sdl2#11 1))

(define sdl2#SDL_BLENDMODE_ADD (sdl2#11 2))

(define sdl2#SDL_BLENDMODE_MOD (sdl2#11 3))

(define sdl2#g62c-constants sdl2#12)

(define sdl2#SDL_QUIT (sdl2#12 0))

(define sdl2#SDL_APP_TERMINATING (sdl2#12 1))

(define sdl2#SDL_APP_LOWMEMORY (sdl2#12 2))

(define sdl2#SDL_APP_WILLENTERBACKGROUND (sdl2#12 3))

(define sdl2#SDL_APP_DIDENTERBACKGROUND (sdl2#12 4))

(define sdl2#SDL_APP_WILLENTERFOREGROUND (sdl2#12 5))

(define sdl2#SDL_APP_DIDENTERFOREGROUND (sdl2#12 6))

(define sdl2#SDL_WINDOWEVENT (sdl2#12 7))

(define sdl2#SDL_SYSWMEVENT (sdl2#12 8))

(define sdl2#SDL_KEYDOWN (sdl2#12 9))

(define sdl2#SDL_KEYUP (sdl2#12 10))

(define sdl2#SDL_TEXTEDITING (sdl2#12 11))

(define sdl2#SDL_TEXTINPUT (sdl2#12 12))

(define sdl2#SDL_MOUSEMOTION (sdl2#12 13))

(define sdl2#SDL_MOUSEBUTTONDOWN (sdl2#12 14))

(define sdl2#SDL_MOUSEBUTTONUP (sdl2#12 15))

(define sdl2#SDL_MOUSEWHEEL (sdl2#12 16))

(define sdl2#SDL_JOYAXISMOTION (sdl2#12 17))

(define sdl2#SDL_JOYBALLMOTION (sdl2#12 18))

(define sdl2#SDL_JOYHATMOTION (sdl2#12 19))

(define sdl2#SDL_JOYBUTTONDOWN (sdl2#12 20))

(define sdl2#SDL_JOYBUTTONUP (sdl2#12 21))

(define sdl2#SDL_JOYDEVICEADDED (sdl2#12 22))

(define sdl2#SDL_JOYDEVICEREMOVED (sdl2#12 23))

(define sdl2#SDL_CONTROLLERAXISMOTION (sdl2#12 24))

(define sdl2#SDL_CONTROLLERBUTTONDOWN (sdl2#12 25))

(define sdl2#SDL_CONTROLLERBUTTONUP (sdl2#12 26))

(define sdl2#SDL_CONTROLLERDEVICEADDED (sdl2#12 27))

(define sdl2#SDL_CONTROLLERDEVICEREMOVED (sdl2#12 28))

(define sdl2#SDL_CONTROLLERDEVICEREMAPPED (sdl2#12 29))

(define sdl2#SDL_FINGERDOWN (sdl2#12 30))

(define sdl2#SDL_FINGERUP (sdl2#12 31))

(define sdl2#SDL_FINGERMOTION (sdl2#12 32))

(define sdl2#SDL_DOLLARGESTURE (sdl2#12 33))

(define sdl2#SDL_DOLLARRECORD (sdl2#12 34))

(define sdl2#SDL_MULTIGESTURE (sdl2#12 35))

(define sdl2#SDL_CLIPBOARDUPDATE (sdl2#12 36))

(define sdl2#SDL_DROPFILE (sdl2#12 37))

(define sdl2#SDL_USEREVENT (sdl2#12 38))

(define sdl2#SDL_LASTEVENT (sdl2#12 39))

(define sdl2#g63c-constants sdl2#13)

(define sdl2#SDL_GL_RED_SIZE (sdl2#13 0))

(define sdl2#SDL_GL_GREEN_SIZE (sdl2#13 1))

(define sdl2#SDL_GL_BLUE_SIZE (sdl2#13 2))

(define sdl2#SDL_GL_ALPHA_SIZE (sdl2#13 3))

(define sdl2#SDL_GL_BUFFER_SIZE (sdl2#13 4))

(define sdl2#SDL_GL_DOUBLEBUFFER (sdl2#13 5))

(define sdl2#SDL_GL_DEPTH_SIZE (sdl2#13 6))

(define sdl2#SDL_GL_STENCIL_SIZE (sdl2#13 7))

(define sdl2#SDL_GL_ACCUM_RED_SIZE (sdl2#13 8))

(define sdl2#SDL_GL_ACCUM_GREEN_SIZE (sdl2#13 9))

(define sdl2#SDL_GL_ACCUM_BLUE_SIZE (sdl2#13 10))

(define sdl2#SDL_GL_ACCUM_ALPHA_SIZE (sdl2#13 11))

(define sdl2#SDL_GL_STEREO (sdl2#13 12))

(define sdl2#SDL_GL_MULTISAMPLEBUFFERS (sdl2#13 13))

(define sdl2#SDL_GL_MULTISAMPLESAMPLES (sdl2#13 14))

(define sdl2#SDL_GL_ACCELERATED_VISUAL (sdl2#13 15))

(define sdl2#SDL_GL_RETAINED_BACKING (sdl2#13 16))

(define sdl2#SDL_GL_CONTEXT_MAJOR_VERSION (sdl2#13 17))

(define sdl2#SDL_GL_CONTEXT_MINOR_VERSION (sdl2#13 18))

(define sdl2#SDL_GL_CONTEXT_FLAGS (sdl2#13 19))

(define sdl2#SDL_GL_CONTEXT_PROFILE_MASK (sdl2#13 20))

(define sdl2#SDL_GL_SHARE_WITH_CURRENT_CONTEXT (sdl2#13 21))

(define sdl2#SDL_GL_FRAMEBUFFER_SRGB_CAPABLE (sdl2#13 22))

(define sdl2#g64c-constants sdl2#14)

(define sdl2#SDL_GL_CONTEXT_DEBUG_FLAG (sdl2#14 0))

(define sdl2#SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG (sdl2#14 1))

(define sdl2#SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG (sdl2#14 2))

(define sdl2#SDL_GL_CONTEXT_RESET_ISOLATION_FLAG (sdl2#14 3))

(define sdl2#g65c-constants sdl2#15)

(define sdl2#SDL_GL_CONTEXT_PROFILE_CORE (sdl2#15 0))

(define sdl2#SDL_GL_CONTEXT_PROFILE_COMPATIBILITY (sdl2#15 1))

(define sdl2#SDL_GL_CONTEXT_PROFILE_ES (sdl2#15 2))

(define sdl2#g66c-constants sdl2#16)

(define sdl2#SDL_HINT_DEFAULT (sdl2#16 0))

(define sdl2#SDL_HINT_NORMAL (sdl2#16 1))

(define sdl2#SDL_HINT_OVERRIDE (sdl2#16 2))

(define sdl2#SDL_HINT_ACCELEROMETER_AS_JOYSTICK
  "SDL_ACCELEROMETER_AS_JOYSTICK")

(define sdl2#SDL_HINT_FRAMEBUFFER_ACCELERATION "SDL_FRAMEBUFFER_ACCELERATION")

(define sdl2#SDL_HINT_GAMECONTROLLERCONFIG "SDL_GAMECONTROLLERCONFIG")

(define sdl2#SDL_HINT_GRAB_KEYBOARD "SDL_GRAB_KEYBOARD")

(define sdl2#SDL_HINT_IDLE_TIMER_DISABLED "SDL_IDLE_TIMER_DISABLED")

(define sdl2#SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS
  "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS")

(define sdl2#SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK
  "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK")

(define sdl2#SDL_HINT_MOUSE_RELATIVE_MODE_WARP "SDL_MOUSE_RELATIVE_MODE_WARP")

(define sdl2#SDL_HINT_ORIENTATIONS "SDL_ORIENTATIONS")

(define sdl2#SDL_HINT_RENDER_DIRECT3D_THREADSAFE
  "SDL_RENDER_DIRECT3D_THREADSAFE")

(define sdl2#SDL_HINT_RENDER_DRIVER "SDL_RENDER_DRIVER")

(define sdl2#SDL_HINT_RENDER_OPENGL_SHADERS "SDL_RENDER_OPENGL_SHADERS")

(define sdl2#SDL_HINT_RENDER_SCALE_QUALITY "SDL_RENDER_SCALE_QUALITY")

(define sdl2#SDL_HINT_RENDER_VSYNC "SDL_RENDER_VSYNC")

(define sdl2#SDL_HINT_TIMER_RESOLUTION "SDL_TIMER_RESOLUTION")

(define sdl2#SDL_HINT_VIDEO_ALLOW_SCREENSAVER "SDL_VIDEO_ALLOW_SCREENSAVER")

(define sdl2#SDL_HINT_VIDEO_HIGHDPI_DISABLED "SDL_VIDEO_HIGHDPI_DISABLED")

(define sdl2#SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES
  "SDL_VIDEO_MAC_FULLSCREEN_SPACES")

(define sdl2#SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS
  "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS")

(define sdl2#SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT
  "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT")

(define sdl2#SDL_HINT_VIDEO_WIN_D3DCOMPILER "SDL_VIDEO_WIN_D3DCOMPILER")

(define sdl2#SDL_HINT_VIDEO_X11_XINERAMA "SDL_VIDEO_X11_XINERAMA")

(define sdl2#SDL_HINT_VIDEO_X11_XRANDR "SDL_VIDEO_X11_XRANDR")

(define sdl2#SDL_HINT_VIDEO_X11_XVIDMODE "SDL_VIDEO_X11_XVIDMODE")

(define sdl2#SDL_HINT_XINPUT_ENABLED "SDL_XINPUT_ENABLED")

(define sdl2#g67c-constants sdl2#17)

(define sdl2#SDLK_UNKNOWN (sdl2#17 0))

(define sdl2#SDLK_RETURN (sdl2#17 1))

(define sdl2#SDLK_ESCAPE (sdl2#17 2))

(define sdl2#SDLK_BACKSPACE (sdl2#17 3))

(define sdl2#SDLK_TAB (sdl2#17 4))

(define sdl2#SDLK_SPACE (sdl2#17 5))

(define sdl2#SDLK_EXCLAIM (sdl2#17 6))

(define sdl2#SDLK_QUOTEDBL (sdl2#17 7))

(define sdl2#SDLK_HASH (sdl2#17 8))

(define sdl2#SDLK_PERCENT (sdl2#17 9))

(define sdl2#SDLK_DOLLAR (sdl2#17 10))

(define sdl2#SDLK_AMPERSAND (sdl2#17 11))

(define sdl2#SDLK_QUOTE (sdl2#17 12))

(define sdl2#SDLK_LEFTPAREN (sdl2#17 13))

(define sdl2#SDLK_RIGHTPAREN (sdl2#17 14))

(define sdl2#SDLK_ASTERISK (sdl2#17 15))

(define sdl2#SDLK_PLUS (sdl2#17 16))

(define sdl2#SDLK_COMMA (sdl2#17 17))

(define sdl2#SDLK_MINUS (sdl2#17 18))

(define sdl2#SDLK_PERIOD (sdl2#17 19))

(define sdl2#SDLK_SLASH (sdl2#17 20))

(define sdl2#SDLK_0 (sdl2#17 21))

(define sdl2#SDLK_1 (sdl2#17 22))

(define sdl2#SDLK_2 (sdl2#17 23))

(define sdl2#SDLK_3 (sdl2#17 24))

(define sdl2#SDLK_4 (sdl2#17 25))

(define sdl2#SDLK_5 (sdl2#17 26))

(define sdl2#SDLK_6 (sdl2#17 27))

(define sdl2#SDLK_7 (sdl2#17 28))

(define sdl2#SDLK_8 (sdl2#17 29))

(define sdl2#SDLK_9 (sdl2#17 30))

(define sdl2#SDLK_COLON (sdl2#17 31))

(define sdl2#SDLK_SEMICOLON (sdl2#17 32))

(define sdl2#SDLK_LESS (sdl2#17 33))

(define sdl2#SDLK_EQUALS (sdl2#17 34))

(define sdl2#SDLK_GREATER (sdl2#17 35))

(define sdl2#SDLK_QUESTION (sdl2#17 36))

(define sdl2#SDLK_AT (sdl2#17 37))

(define sdl2#SDLK_LEFTBRACKET (sdl2#17 38))

(define sdl2#SDLK_BACKSLASH (sdl2#17 39))

(define sdl2#SDLK_RIGHTBRACKET (sdl2#17 40))

(define sdl2#SDLK_CARET (sdl2#17 41))

(define sdl2#SDLK_UNDERSCORE (sdl2#17 42))

(define sdl2#SDLK_BACKQUOTE (sdl2#17 43))

(define sdl2#SDLK_a (sdl2#17 44))

(define sdl2#SDLK_b (sdl2#17 45))

(define sdl2#SDLK_c (sdl2#17 46))

(define sdl2#SDLK_d (sdl2#17 47))

(define sdl2#SDLK_e (sdl2#17 48))

(define sdl2#SDLK_f (sdl2#17 49))

(define sdl2#SDLK_g (sdl2#17 50))

(define sdl2#SDLK_h (sdl2#17 51))

(define sdl2#SDLK_i (sdl2#17 52))

(define sdl2#SDLK_j (sdl2#17 53))

(define sdl2#SDLK_k (sdl2#17 54))

(define sdl2#SDLK_l (sdl2#17 55))

(define sdl2#SDLK_m (sdl2#17 56))

(define sdl2#SDLK_n (sdl2#17 57))

(define sdl2#SDLK_o (sdl2#17 58))

(define sdl2#SDLK_p (sdl2#17 59))

(define sdl2#SDLK_q (sdl2#17 60))

(define sdl2#SDLK_r (sdl2#17 61))

(define sdl2#SDLK_s (sdl2#17 62))

(define sdl2#SDLK_t (sdl2#17 63))

(define sdl2#SDLK_u (sdl2#17 64))

(define sdl2#SDLK_v (sdl2#17 65))

(define sdl2#SDLK_w (sdl2#17 66))

(define sdl2#SDLK_x (sdl2#17 67))

(define sdl2#SDLK_y (sdl2#17 68))

(define sdl2#SDLK_z (sdl2#17 69))

(define sdl2#SDLK_CAPSLOCK (sdl2#17 70))

(define sdl2#SDLK_F1 (sdl2#17 71))

(define sdl2#SDLK_F2 (sdl2#17 72))

(define sdl2#SDLK_F3 (sdl2#17 73))

(define sdl2#SDLK_F4 (sdl2#17 74))

(define sdl2#SDLK_F5 (sdl2#17 75))

(define sdl2#SDLK_F6 (sdl2#17 76))

(define sdl2#SDLK_F7 (sdl2#17 77))

(define sdl2#SDLK_F8 (sdl2#17 78))

(define sdl2#SDLK_F9 (sdl2#17 79))

(define sdl2#SDLK_F10 (sdl2#17 80))

(define sdl2#SDLK_F11 (sdl2#17 81))

(define sdl2#SDLK_F12 (sdl2#17 82))

(define sdl2#SDLK_PRINTSCREEN (sdl2#17 83))

(define sdl2#SDLK_SCROLLLOCK (sdl2#17 84))

(define sdl2#SDLK_PAUSE (sdl2#17 85))

(define sdl2#SDLK_INSERT (sdl2#17 86))

(define sdl2#SDLK_HOME (sdl2#17 87))

(define sdl2#SDLK_PAGEUP (sdl2#17 88))

(define sdl2#SDLK_DELETE (sdl2#17 89))

(define sdl2#SDLK_END (sdl2#17 90))

(define sdl2#SDLK_PAGEDOWN (sdl2#17 91))

(define sdl2#SDLK_RIGHT (sdl2#17 92))

(define sdl2#SDLK_LEFT (sdl2#17 93))

(define sdl2#SDLK_DOWN (sdl2#17 94))

(define sdl2#SDLK_UP (sdl2#17 95))

(define sdl2#SDLK_NUMLOCKCLEAR (sdl2#17 96))

(define sdl2#SDLK_KP_DIVIDE (sdl2#17 97))

(define sdl2#SDLK_KP_MULTIPLY (sdl2#17 98))

(define sdl2#SDLK_KP_MINUS (sdl2#17 99))

(define sdl2#SDLK_KP_PLUS (sdl2#17 100))

(define sdl2#SDLK_KP_ENTER (sdl2#17 101))

(define sdl2#SDLK_KP_1 (sdl2#17 102))

(define sdl2#SDLK_KP_2 (sdl2#17 103))

(define sdl2#SDLK_KP_3 (sdl2#17 104))

(define sdl2#SDLK_KP_4 (sdl2#17 105))

(define sdl2#SDLK_KP_5 (sdl2#17 106))

(define sdl2#SDLK_KP_6 (sdl2#17 107))

(define sdl2#SDLK_KP_7 (sdl2#17 108))

(define sdl2#SDLK_KP_8 (sdl2#17 109))

(define sdl2#SDLK_KP_9 (sdl2#17 110))

(define sdl2#SDLK_KP_0 (sdl2#17 111))

(define sdl2#SDLK_KP_PERIOD (sdl2#17 112))

(define sdl2#SDLK_APPLICATION (sdl2#17 113))

(define sdl2#SDLK_POWER (sdl2#17 114))

(define sdl2#SDLK_KP_EQUALS (sdl2#17 115))

(define sdl2#SDLK_F13 (sdl2#17 116))

(define sdl2#SDLK_F14 (sdl2#17 117))

(define sdl2#SDLK_F15 (sdl2#17 118))

(define sdl2#SDLK_F16 (sdl2#17 119))

(define sdl2#SDLK_F17 (sdl2#17 120))

(define sdl2#SDLK_F18 (sdl2#17 121))

(define sdl2#SDLK_F19 (sdl2#17 122))

(define sdl2#SDLK_F20 (sdl2#17 123))

(define sdl2#SDLK_F21 (sdl2#17 124))

(define sdl2#SDLK_F22 (sdl2#17 125))

(define sdl2#SDLK_F23 (sdl2#17 126))

(define sdl2#SDLK_F24 (sdl2#17 127))

(define sdl2#SDLK_EXECUTE (sdl2#17 128))

(define sdl2#SDLK_HELP (sdl2#17 129))

(define sdl2#SDLK_MENU (sdl2#17 130))

(define sdl2#SDLK_SELECT (sdl2#17 131))

(define sdl2#SDLK_STOP (sdl2#17 132))

(define sdl2#SDLK_AGAIN (sdl2#17 133))

(define sdl2#SDLK_UNDO (sdl2#17 134))

(define sdl2#SDLK_CUT (sdl2#17 135))

(define sdl2#SDLK_COPY (sdl2#17 136))

(define sdl2#SDLK_PASTE (sdl2#17 137))

(define sdl2#SDLK_FIND (sdl2#17 138))

(define sdl2#SDLK_MUTE (sdl2#17 139))

(define sdl2#SDLK_VOLUMEUP (sdl2#17 140))

(define sdl2#SDLK_VOLUMEDOWN (sdl2#17 141))

(define sdl2#SDLK_KP_COMMA (sdl2#17 142))

(define sdl2#SDLK_KP_EQUALSAS400 (sdl2#17 143))

(define sdl2#SDLK_ALTERASE (sdl2#17 144))

(define sdl2#SDLK_SYSREQ (sdl2#17 145))

(define sdl2#SDLK_CANCEL (sdl2#17 146))

(define sdl2#SDLK_CLEAR (sdl2#17 147))

(define sdl2#SDLK_PRIOR (sdl2#17 148))

(define sdl2#SDLK_RETURN2 (sdl2#17 149))

(define sdl2#SDLK_SEPARATOR (sdl2#17 150))

(define sdl2#SDLK_OUT (sdl2#17 151))

(define sdl2#SDLK_OPER (sdl2#17 152))

(define sdl2#SDLK_CLEARAGAIN (sdl2#17 153))

(define sdl2#SDLK_CRSEL (sdl2#17 154))

(define sdl2#SDLK_EXSEL (sdl2#17 155))

(define sdl2#SDLK_KP_00 (sdl2#17 156))

(define sdl2#SDLK_KP_000 (sdl2#17 157))

(define sdl2#SDLK_THOUSANDSSEPARATOR (sdl2#17 158))

(define sdl2#SDLK_DECIMALSEPARATOR (sdl2#17 159))

(define sdl2#SDLK_CURRENCYUNIT (sdl2#17 160))

(define sdl2#SDLK_CURRENCYSUBUNIT (sdl2#17 161))

(define sdl2#SDLK_KP_LEFTPAREN (sdl2#17 162))

(define sdl2#SDLK_KP_RIGHTPAREN (sdl2#17 163))

(define sdl2#SDLK_KP_LEFTBRACE (sdl2#17 164))

(define sdl2#SDLK_KP_RIGHTBRACE (sdl2#17 165))

(define sdl2#SDLK_KP_TAB (sdl2#17 166))

(define sdl2#SDLK_KP_BACKSPACE (sdl2#17 167))

(define sdl2#SDLK_KP_A (sdl2#17 168))

(define sdl2#SDLK_KP_B (sdl2#17 169))

(define sdl2#SDLK_KP_C (sdl2#17 170))

(define sdl2#SDLK_KP_D (sdl2#17 171))

(define sdl2#SDLK_KP_E (sdl2#17 172))

(define sdl2#SDLK_KP_F (sdl2#17 173))

(define sdl2#SDLK_KP_XOR (sdl2#17 174))

(define sdl2#SDLK_KP_POWER (sdl2#17 175))

(define sdl2#SDLK_KP_PERCENT (sdl2#17 176))

(define sdl2#SDLK_KP_LESS (sdl2#17 177))

(define sdl2#SDLK_KP_GREATER (sdl2#17 178))

(define sdl2#SDLK_KP_AMPERSAND (sdl2#17 179))

(define sdl2#SDLK_KP_DBLAMPERSAND (sdl2#17 180))

(define sdl2#SDLK_KP_VERTICALBAR (sdl2#17 181))

(define sdl2#SDLK_KP_DBLVERTICALBAR (sdl2#17 182))

(define sdl2#SDLK_KP_COLON (sdl2#17 183))

(define sdl2#SDLK_KP_HASH (sdl2#17 184))

(define sdl2#SDLK_KP_SPACE (sdl2#17 185))

(define sdl2#SDLK_KP_AT (sdl2#17 186))

(define sdl2#SDLK_KP_EXCLAM (sdl2#17 187))

(define sdl2#SDLK_KP_MEMSTORE (sdl2#17 188))

(define sdl2#SDLK_KP_MEMRECALL (sdl2#17 189))

(define sdl2#SDLK_KP_MEMCLEAR (sdl2#17 190))

(define sdl2#SDLK_KP_MEMADD (sdl2#17 191))

(define sdl2#SDLK_KP_MEMSUBTRACT (sdl2#17 192))

(define sdl2#SDLK_KP_MEMMULTIPLY (sdl2#17 193))

(define sdl2#SDLK_KP_MEMDIVIDE (sdl2#17 194))

(define sdl2#SDLK_KP_PLUSMINUS (sdl2#17 195))

(define sdl2#SDLK_KP_CLEAR (sdl2#17 196))

(define sdl2#SDLK_KP_CLEARENTRY (sdl2#17 197))

(define sdl2#SDLK_KP_BINARY (sdl2#17 198))

(define sdl2#SDLK_KP_OCTAL (sdl2#17 199))

(define sdl2#SDLK_KP_DECIMAL (sdl2#17 200))

(define sdl2#SDLK_KP_HEXADECIMAL (sdl2#17 201))

(define sdl2#SDLK_LCTRL (sdl2#17 202))

(define sdl2#SDLK_LSHIFT (sdl2#17 203))

(define sdl2#SDLK_LALT (sdl2#17 204))

(define sdl2#SDLK_LGUI (sdl2#17 205))

(define sdl2#SDLK_RCTRL (sdl2#17 206))

(define sdl2#SDLK_RSHIFT (sdl2#17 207))

(define sdl2#SDLK_RALT (sdl2#17 208))

(define sdl2#SDLK_RGUI (sdl2#17 209))

(define sdl2#SDLK_MODE (sdl2#17 210))

(define sdl2#SDLK_AUDIONEXT (sdl2#17 211))

(define sdl2#SDLK_AUDIOPREV (sdl2#17 212))

(define sdl2#SDLK_AUDIOSTOP (sdl2#17 213))

(define sdl2#SDLK_AUDIOPLAY (sdl2#17 214))

(define sdl2#SDLK_AUDIOMUTE (sdl2#17 215))

(define sdl2#SDLK_MEDIASELECT (sdl2#17 216))

(define sdl2#SDLK_WWW (sdl2#17 217))

(define sdl2#SDLK_MAIL (sdl2#17 218))

(define sdl2#SDLK_CALCULATOR (sdl2#17 219))

(define sdl2#SDLK_COMPUTER (sdl2#17 220))

(define sdl2#SDLK_AC_SEARCH (sdl2#17 221))

(define sdl2#SDLK_AC_HOME (sdl2#17 222))

(define sdl2#SDLK_AC_BACK (sdl2#17 223))

(define sdl2#SDLK_AC_FORWARD (sdl2#17 224))

(define sdl2#SDLK_AC_STOP (sdl2#17 225))

(define sdl2#SDLK_AC_REFRESH (sdl2#17 226))

(define sdl2#SDLK_AC_BOOKMARKS (sdl2#17 227))

(define sdl2#SDLK_BRIGHTNESSDOWN (sdl2#17 228))

(define sdl2#SDLK_BRIGHTNESSUP (sdl2#17 229))

(define sdl2#SDLK_DISPLAYSWITCH (sdl2#17 230))

(define sdl2#SDLK_KBDILLUMTOGGLE (sdl2#17 231))

(define sdl2#SDLK_KBDILLUMDOWN (sdl2#17 232))

(define sdl2#SDLK_KBDILLUMUP (sdl2#17 233))

(define sdl2#SDLK_EJECT (sdl2#17 234))

(define sdl2#SDLK_SLEEP (sdl2#17 235))

(define sdl2#g68c-constants sdl2#18)

(define sdl2#KMOD_NONE (sdl2#18 0))

(define sdl2#KMOD_LSHIFT (sdl2#18 1))

(define sdl2#KMOD_RSHIFT (sdl2#18 2))

(define sdl2#KMOD_LCTRL (sdl2#18 3))

(define sdl2#KMOD_RCTRL (sdl2#18 4))

(define sdl2#KMOD_LALT (sdl2#18 5))

(define sdl2#KMOD_RALT (sdl2#18 6))

(define sdl2#KMOD_LGUI (sdl2#18 7))

(define sdl2#KMOD_RGUI (sdl2#18 8))

(define sdl2#KMOD_NUM (sdl2#18 9))

(define sdl2#KMOD_CAPS (sdl2#18 10))

(define sdl2#KMOD_MODE (sdl2#18 11))

(define sdl2#KMOD_CTRL (sdl2#18 12))

(define sdl2#KMOD_SHIFT (sdl2#18 13))

(define sdl2#KMOD_ALT (sdl2#18 14))

(define sdl2#KMOD_GUI (sdl2#18 15))

(define sdl2#g69c-constants sdl2#19)

(define sdl2#SDL_SCANCODE_UNKNOWN (sdl2#19 0))

(define sdl2#SDL_SCANCODE_A (sdl2#19 1))

(define sdl2#SDL_SCANCODE_B (sdl2#19 2))

(define sdl2#SDL_SCANCODE_C (sdl2#19 3))

(define sdl2#SDL_SCANCODE_D (sdl2#19 4))

(define sdl2#SDL_SCANCODE_E (sdl2#19 5))

(define sdl2#SDL_SCANCODE_F (sdl2#19 6))

(define sdl2#SDL_SCANCODE_G (sdl2#19 7))

(define sdl2#SDL_SCANCODE_H (sdl2#19 8))

(define sdl2#SDL_SCANCODE_I (sdl2#19 9))

(define sdl2#SDL_SCANCODE_J (sdl2#19 10))

(define sdl2#SDL_SCANCODE_K (sdl2#19 11))

(define sdl2#SDL_SCANCODE_L (sdl2#19 12))

(define sdl2#SDL_SCANCODE_M (sdl2#19 13))

(define sdl2#SDL_SCANCODE_N (sdl2#19 14))

(define sdl2#SDL_SCANCODE_O (sdl2#19 15))

(define sdl2#SDL_SCANCODE_P (sdl2#19 16))

(define sdl2#SDL_SCANCODE_Q (sdl2#19 17))

(define sdl2#SDL_SCANCODE_R (sdl2#19 18))

(define sdl2#SDL_SCANCODE_S (sdl2#19 19))

(define sdl2#SDL_SCANCODE_T (sdl2#19 20))

(define sdl2#SDL_SCANCODE_U (sdl2#19 21))

(define sdl2#SDL_SCANCODE_V (sdl2#19 22))

(define sdl2#SDL_SCANCODE_W (sdl2#19 23))

(define sdl2#SDL_SCANCODE_X (sdl2#19 24))

(define sdl2#SDL_SCANCODE_Y (sdl2#19 25))

(define sdl2#SDL_SCANCODE_Z (sdl2#19 26))

(define sdl2#SDL_SCANCODE_1 (sdl2#19 27))

(define sdl2#SDL_SCANCODE_2 (sdl2#19 28))

(define sdl2#SDL_SCANCODE_3 (sdl2#19 29))

(define sdl2#SDL_SCANCODE_4 (sdl2#19 30))

(define sdl2#SDL_SCANCODE_5 (sdl2#19 31))

(define sdl2#SDL_SCANCODE_6 (sdl2#19 32))

(define sdl2#SDL_SCANCODE_7 (sdl2#19 33))

(define sdl2#SDL_SCANCODE_8 (sdl2#19 34))

(define sdl2#SDL_SCANCODE_9 (sdl2#19 35))

(define sdl2#SDL_SCANCODE_0 (sdl2#19 36))

(define sdl2#SDL_SCANCODE_RETURN (sdl2#19 37))

(define sdl2#SDL_SCANCODE_ESCAPE (sdl2#19 38))

(define sdl2#SDL_SCANCODE_BACKSPACE (sdl2#19 39))

(define sdl2#SDL_SCANCODE_TAB (sdl2#19 40))

(define sdl2#SDL_SCANCODE_SPACE (sdl2#19 41))

(define sdl2#SDL_SCANCODE_MINUS (sdl2#19 42))

(define sdl2#SDL_SCANCODE_EQUALS (sdl2#19 43))

(define sdl2#SDL_SCANCODE_LEFTBRACKET (sdl2#19 44))

(define sdl2#SDL_SCANCODE_RIGHTBRACKET (sdl2#19 45))

(define sdl2#SDL_SCANCODE_BACKSLASH (sdl2#19 46))

(define sdl2#SDL_SCANCODE_NONUSHASH (sdl2#19 47))

(define sdl2#SDL_SCANCODE_SEMICOLON (sdl2#19 48))

(define sdl2#SDL_SCANCODE_APOSTROPHE (sdl2#19 49))

(define sdl2#SDL_SCANCODE_GRAVE (sdl2#19 50))

(define sdl2#SDL_SCANCODE_COMMA (sdl2#19 51))

(define sdl2#SDL_SCANCODE_PERIOD (sdl2#19 52))

(define sdl2#SDL_SCANCODE_SLASH (sdl2#19 53))

(define sdl2#SDL_SCANCODE_CAPSLOCK (sdl2#19 54))

(define sdl2#SDL_SCANCODE_F1 (sdl2#19 55))

(define sdl2#SDL_SCANCODE_F2 (sdl2#19 56))

(define sdl2#SDL_SCANCODE_F3 (sdl2#19 57))

(define sdl2#SDL_SCANCODE_F4 (sdl2#19 58))

(define sdl2#SDL_SCANCODE_F5 (sdl2#19 59))

(define sdl2#SDL_SCANCODE_F6 (sdl2#19 60))

(define sdl2#SDL_SCANCODE_F7 (sdl2#19 61))

(define sdl2#SDL_SCANCODE_F8 (sdl2#19 62))

(define sdl2#SDL_SCANCODE_F9 (sdl2#19 63))

(define sdl2#SDL_SCANCODE_F10 (sdl2#19 64))

(define sdl2#SDL_SCANCODE_F11 (sdl2#19 65))

(define sdl2#SDL_SCANCODE_F12 (sdl2#19 66))

(define sdl2#SDL_SCANCODE_PRINTSCREEN (sdl2#19 67))

(define sdl2#SDL_SCANCODE_SCROLLLOCK (sdl2#19 68))

(define sdl2#SDL_SCANCODE_PAUSE (sdl2#19 69))

(define sdl2#SDL_SCANCODE_INSERT (sdl2#19 70))

(define sdl2#SDL_SCANCODE_HOME (sdl2#19 71))

(define sdl2#SDL_SCANCODE_PAGEUP (sdl2#19 72))

(define sdl2#SDL_SCANCODE_DELETE (sdl2#19 73))

(define sdl2#SDL_SCANCODE_END (sdl2#19 74))

(define sdl2#SDL_SCANCODE_PAGEDOWN (sdl2#19 75))

(define sdl2#SDL_SCANCODE_RIGHT (sdl2#19 76))

(define sdl2#SDL_SCANCODE_LEFT (sdl2#19 77))

(define sdl2#SDL_SCANCODE_DOWN (sdl2#19 78))

(define sdl2#SDL_SCANCODE_UP (sdl2#19 79))

(define sdl2#SDL_SCANCODE_NUMLOCKCLEAR (sdl2#19 80))

(define sdl2#SDL_SCANCODE_KP_DIVIDE (sdl2#19 81))

(define sdl2#SDL_SCANCODE_KP_MULTIPLY (sdl2#19 82))

(define sdl2#SDL_SCANCODE_KP_MINUS (sdl2#19 83))

(define sdl2#SDL_SCANCODE_KP_PLUS (sdl2#19 84))

(define sdl2#SDL_SCANCODE_KP_ENTER (sdl2#19 85))

(define sdl2#SDL_SCANCODE_KP_1 (sdl2#19 86))

(define sdl2#SDL_SCANCODE_KP_2 (sdl2#19 87))

(define sdl2#SDL_SCANCODE_KP_3 (sdl2#19 88))

(define sdl2#SDL_SCANCODE_KP_4 (sdl2#19 89))

(define sdl2#SDL_SCANCODE_KP_5 (sdl2#19 90))

(define sdl2#SDL_SCANCODE_KP_6 (sdl2#19 91))

(define sdl2#SDL_SCANCODE_KP_7 (sdl2#19 92))

(define sdl2#SDL_SCANCODE_KP_8 (sdl2#19 93))

(define sdl2#SDL_SCANCODE_KP_9 (sdl2#19 94))

(define sdl2#SDL_SCANCODE_KP_0 (sdl2#19 95))

(define sdl2#SDL_SCANCODE_KP_PERIOD (sdl2#19 96))

(define sdl2#SDL_SCANCODE_NONUSBACKSLASH (sdl2#19 97))

(define sdl2#SDL_SCANCODE_APPLICATION (sdl2#19 98))

(define sdl2#SDL_SCANCODE_POWER (sdl2#19 99))

(define sdl2#SDL_SCANCODE_KP_EQUALS (sdl2#19 100))

(define sdl2#SDL_SCANCODE_F13 (sdl2#19 101))

(define sdl2#SDL_SCANCODE_F14 (sdl2#19 102))

(define sdl2#SDL_SCANCODE_F15 (sdl2#19 103))

(define sdl2#SDL_SCANCODE_F16 (sdl2#19 104))

(define sdl2#SDL_SCANCODE_F17 (sdl2#19 105))

(define sdl2#SDL_SCANCODE_F18 (sdl2#19 106))

(define sdl2#SDL_SCANCODE_F19 (sdl2#19 107))

(define sdl2#SDL_SCANCODE_F20 (sdl2#19 108))

(define sdl2#SDL_SCANCODE_F21 (sdl2#19 109))

(define sdl2#SDL_SCANCODE_F22 (sdl2#19 110))

(define sdl2#SDL_SCANCODE_F23 (sdl2#19 111))

(define sdl2#SDL_SCANCODE_F24 (sdl2#19 112))

(define sdl2#SDL_SCANCODE_EXECUTE (sdl2#19 113))

(define sdl2#SDL_SCANCODE_HELP (sdl2#19 114))

(define sdl2#SDL_SCANCODE_MENU (sdl2#19 115))

(define sdl2#SDL_SCANCODE_SELECT (sdl2#19 116))

(define sdl2#SDL_SCANCODE_STOP (sdl2#19 117))

(define sdl2#SDL_SCANCODE_AGAIN (sdl2#19 118))

(define sdl2#SDL_SCANCODE_UNDO (sdl2#19 119))

(define sdl2#SDL_SCANCODE_CUT (sdl2#19 120))

(define sdl2#SDL_SCANCODE_COPY (sdl2#19 121))

(define sdl2#SDL_SCANCODE_PASTE (sdl2#19 122))

(define sdl2#SDL_SCANCODE_FIND (sdl2#19 123))

(define sdl2#SDL_SCANCODE_MUTE (sdl2#19 124))

(define sdl2#SDL_SCANCODE_VOLUMEUP (sdl2#19 125))

(define sdl2#SDL_SCANCODE_VOLUMEDOWN (sdl2#19 126))

(define sdl2#SDL_SCANCODE_KP_COMMA (sdl2#19 127))

(define sdl2#SDL_SCANCODE_KP_EQUALSAS400 (sdl2#19 128))

(define sdl2#SDL_SCANCODE_INTERNATIONAL1 (sdl2#19 129))

(define sdl2#SDL_SCANCODE_INTERNATIONAL2 (sdl2#19 130))

(define sdl2#SDL_SCANCODE_INTERNATIONAL3 (sdl2#19 131))

(define sdl2#SDL_SCANCODE_INTERNATIONAL4 (sdl2#19 132))

(define sdl2#SDL_SCANCODE_INTERNATIONAL5 (sdl2#19 133))

(define sdl2#SDL_SCANCODE_INTERNATIONAL6 (sdl2#19 134))

(define sdl2#SDL_SCANCODE_INTERNATIONAL7 (sdl2#19 135))

(define sdl2#SDL_SCANCODE_INTERNATIONAL8 (sdl2#19 136))

(define sdl2#SDL_SCANCODE_INTERNATIONAL9 (sdl2#19 137))

(define sdl2#SDL_SCANCODE_LANG1 (sdl2#19 138))

(define sdl2#SDL_SCANCODE_LANG2 (sdl2#19 139))

(define sdl2#SDL_SCANCODE_LANG3 (sdl2#19 140))

(define sdl2#SDL_SCANCODE_LANG4 (sdl2#19 141))

(define sdl2#SDL_SCANCODE_LANG5 (sdl2#19 142))

(define sdl2#SDL_SCANCODE_LANG6 (sdl2#19 143))

(define sdl2#SDL_SCANCODE_LANG7 (sdl2#19 144))

(define sdl2#SDL_SCANCODE_LANG8 (sdl2#19 145))

(define sdl2#SDL_SCANCODE_LANG9 (sdl2#19 146))

(define sdl2#SDL_SCANCODE_ALTERASE (sdl2#19 147))

(define sdl2#SDL_SCANCODE_SYSREQ (sdl2#19 148))

(define sdl2#SDL_SCANCODE_CANCEL (sdl2#19 149))

(define sdl2#SDL_SCANCODE_CLEAR (sdl2#19 150))

(define sdl2#SDL_SCANCODE_PRIOR (sdl2#19 151))

(define sdl2#SDL_SCANCODE_RETURN2 (sdl2#19 152))

(define sdl2#SDL_SCANCODE_SEPARATOR (sdl2#19 153))

(define sdl2#SDL_SCANCODE_OUT (sdl2#19 154))

(define sdl2#SDL_SCANCODE_OPER (sdl2#19 155))

(define sdl2#SDL_SCANCODE_CLEARAGAIN (sdl2#19 156))

(define sdl2#SDL_SCANCODE_CRSEL (sdl2#19 157))

(define sdl2#SDL_SCANCODE_EXSEL (sdl2#19 158))

(define sdl2#SDL_SCANCODE_KP_00 (sdl2#19 159))

(define sdl2#SDL_SCANCODE_KP_000 (sdl2#19 160))

(define sdl2#SDL_SCANCODE_THOUSANDSSEPARATOR (sdl2#19 161))

(define sdl2#SDL_SCANCODE_DECIMALSEPARATOR (sdl2#19 162))

(define sdl2#SDL_SCANCODE_CURRENCYUNIT (sdl2#19 163))

(define sdl2#SDL_SCANCODE_CURRENCYSUBUNIT (sdl2#19 164))

(define sdl2#SDL_SCANCODE_KP_LEFTPAREN (sdl2#19 165))

(define sdl2#SDL_SCANCODE_KP_RIGHTPAREN (sdl2#19 166))

(define sdl2#SDL_SCANCODE_KP_LEFTBRACE (sdl2#19 167))

(define sdl2#SDL_SCANCODE_KP_RIGHTBRACE (sdl2#19 168))

(define sdl2#SDL_SCANCODE_KP_TAB (sdl2#19 169))

(define sdl2#SDL_SCANCODE_KP_BACKSPACE (sdl2#19 170))

(define sdl2#SDL_SCANCODE_KP_A (sdl2#19 171))

(define sdl2#SDL_SCANCODE_KP_B (sdl2#19 172))

(define sdl2#SDL_SCANCODE_KP_C (sdl2#19 173))

(define sdl2#SDL_SCANCODE_KP_D (sdl2#19 174))

(define sdl2#SDL_SCANCODE_KP_E (sdl2#19 175))

(define sdl2#SDL_SCANCODE_KP_F (sdl2#19 176))

(define sdl2#SDL_SCANCODE_KP_XOR (sdl2#19 177))

(define sdl2#SDL_SCANCODE_KP_POWER (sdl2#19 178))

(define sdl2#SDL_SCANCODE_KP_PERCENT (sdl2#19 179))

(define sdl2#SDL_SCANCODE_KP_LESS (sdl2#19 180))

(define sdl2#SDL_SCANCODE_KP_GREATER (sdl2#19 181))

(define sdl2#SDL_SCANCODE_KP_AMPERSAND (sdl2#19 182))

(define sdl2#SDL_SCANCODE_KP_DBLAMPERSAND (sdl2#19 183))

(define sdl2#SDL_SCANCODE_KP_VERTICALBAR (sdl2#19 184))

(define sdl2#SDL_SCANCODE_KP_DBLVERTICALBAR (sdl2#19 185))

(define sdl2#SDL_SCANCODE_KP_COLON (sdl2#19 186))

(define sdl2#SDL_SCANCODE_KP_HASH (sdl2#19 187))

(define sdl2#SDL_SCANCODE_KP_SPACE (sdl2#19 188))

(define sdl2#SDL_SCANCODE_KP_AT (sdl2#19 189))

(define sdl2#SDL_SCANCODE_KP_EXCLAM (sdl2#19 190))

(define sdl2#SDL_SCANCODE_KP_MEMSTORE (sdl2#19 191))

(define sdl2#SDL_SCANCODE_KP_MEMRECALL (sdl2#19 192))

(define sdl2#SDL_SCANCODE_KP_MEMCLEAR (sdl2#19 193))

(define sdl2#SDL_SCANCODE_KP_MEMADD (sdl2#19 194))

(define sdl2#SDL_SCANCODE_KP_MEMSUBTRACT (sdl2#19 195))

(define sdl2#SDL_SCANCODE_KP_MEMMULTIPLY (sdl2#19 196))

(define sdl2#SDL_SCANCODE_KP_MEMDIVIDE (sdl2#19 197))

(define sdl2#SDL_SCANCODE_KP_PLUSMINUS (sdl2#19 198))

(define sdl2#SDL_SCANCODE_KP_CLEAR (sdl2#19 199))

(define sdl2#SDL_SCANCODE_KP_CLEARENTRY (sdl2#19 200))

(define sdl2#SDL_SCANCODE_KP_BINARY (sdl2#19 201))

(define sdl2#SDL_SCANCODE_KP_OCTAL (sdl2#19 202))

(define sdl2#SDL_SCANCODE_KP_DECIMAL (sdl2#19 203))

(define sdl2#SDL_SCANCODE_KP_HEXADECIMAL (sdl2#19 204))

(define sdl2#SDL_SCANCODE_LCTRL (sdl2#19 205))

(define sdl2#SDL_SCANCODE_LSHIFT (sdl2#19 206))

(define sdl2#SDL_SCANCODE_LALT (sdl2#19 207))

(define sdl2#SDL_SCANCODE_LGUI (sdl2#19 208))

(define sdl2#SDL_SCANCODE_RCTRL (sdl2#19 209))

(define sdl2#SDL_SCANCODE_RSHIFT (sdl2#19 210))

(define sdl2#SDL_SCANCODE_RALT (sdl2#19 211))

(define sdl2#SDL_SCANCODE_RGUI (sdl2#19 212))

(define sdl2#SDL_SCANCODE_MODE (sdl2#19 213))

(define sdl2#SDL_SCANCODE_AUDIONEXT (sdl2#19 214))

(define sdl2#SDL_SCANCODE_AUDIOPREV (sdl2#19 215))

(define sdl2#SDL_SCANCODE_AUDIOSTOP (sdl2#19 216))

(define sdl2#SDL_SCANCODE_AUDIOPLAY (sdl2#19 217))

(define sdl2#SDL_SCANCODE_AUDIOMUTE (sdl2#19 218))

(define sdl2#SDL_SCANCODE_MEDIASELECT (sdl2#19 219))

(define sdl2#SDL_SCANCODE_WWW (sdl2#19 220))

(define sdl2#SDL_SCANCODE_MAIL (sdl2#19 221))

(define sdl2#SDL_SCANCODE_CALCULATOR (sdl2#19 222))

(define sdl2#SDL_SCANCODE_COMPUTER (sdl2#19 223))

(define sdl2#SDL_SCANCODE_AC_SEARCH (sdl2#19 224))

(define sdl2#SDL_SCANCODE_AC_HOME (sdl2#19 225))

(define sdl2#SDL_SCANCODE_AC_BACK (sdl2#19 226))

(define sdl2#SDL_SCANCODE_AC_FORWARD (sdl2#19 227))

(define sdl2#SDL_SCANCODE_AC_STOP (sdl2#19 228))

(define sdl2#SDL_SCANCODE_AC_REFRESH (sdl2#19 229))

(define sdl2#SDL_SCANCODE_AC_BOOKMARKS (sdl2#19 230))

(define sdl2#SDL_SCANCODE_BRIGHTNESSDOWN (sdl2#19 231))

(define sdl2#SDL_SCANCODE_BRIGHTNESSUP (sdl2#19 232))

(define sdl2#SDL_SCANCODE_DISPLAYSWITCH (sdl2#19 233))

(define sdl2#SDL_SCANCODE_KBDILLUMTOGGLE (sdl2#19 234))

(define sdl2#SDL_SCANCODE_KBDILLUMDOWN (sdl2#19 235))

(define sdl2#SDL_SCANCODE_KBDILLUMUP (sdl2#19 236))

(define sdl2#SDL_SCANCODE_EJECT (sdl2#19 237))

(define sdl2#SDL_SCANCODE_SLEEP (sdl2#19 238))

(define sdl2#SDL_SCANCODE_APP1 (sdl2#19 239))

(define sdl2#SDL_SCANCODE_APP2 (sdl2#19 240))

(define sdl2#SDL_NUM_SCANCODES (sdl2#19 241))

(define sdl2#g70c-constants sdl2#20)

(define sdl2#SDL_LOG_CATEGORY_APPLICATION (sdl2#20 0))

(define sdl2#SDL_LOG_CATEGORY_ERROR (sdl2#20 1))

(define sdl2#SDL_LOG_CATEGORY_SYSTEM (sdl2#20 2))

(define sdl2#SDL_LOG_CATEGORY_AUDIO (sdl2#20 3))

(define sdl2#SDL_LOG_CATEGORY_VIDEO (sdl2#20 4))

(define sdl2#SDL_LOG_CATEGORY_RENDER (sdl2#20 5))

(define sdl2#SDL_LOG_CATEGORY_INPUT (sdl2#20 6))

(define sdl2#SDL_LOG_CATEGORY_CUSTOM (sdl2#20 7))

(define sdl2#g71c-constants sdl2#21)

(define sdl2#SDL_LOG_PRIORITY_VERBOSE (sdl2#21 0))

(define sdl2#SDL_LOG_PRIORITY_DEBUG (sdl2#21 1))

(define sdl2#SDL_LOG_PRIORITY_INFO (sdl2#21 2))

(define sdl2#SDL_LOG_PRIORITY_WARN (sdl2#21 3))

(define sdl2#SDL_LOG_PRIORITY_ERROR (sdl2#21 4))

(define sdl2#SDL_LOG_PRIORITY_CRITICAL (sdl2#21 5))

(define sdl2#g72c-constants sdl2#22)

(define sdl2#SDL_PIXELFORMAT_UNKNOWN (sdl2#22 0))

(define sdl2#SDL_PIXELFORMAT_INDEX1LSB (sdl2#22 1))

(define sdl2#SDL_PIXELFORMAT_INDEX1MSB (sdl2#22 2))

(define sdl2#SDL_PIXELFORMAT_INDEX4LSB (sdl2#22 3))

(define sdl2#SDL_PIXELFORMAT_INDEX4MSB (sdl2#22 4))

(define sdl2#SDL_PIXELFORMAT_INDEX8 (sdl2#22 5))

(define sdl2#SDL_PIXELFORMAT_RGB332 (sdl2#22 6))

(define sdl2#SDL_PIXELFORMAT_RGB444 (sdl2#22 7))

(define sdl2#SDL_PIXELFORMAT_RGB555 (sdl2#22 8))

(define sdl2#SDL_PIXELFORMAT_BGR555 (sdl2#22 9))

(define sdl2#SDL_PIXELFORMAT_ARGB4444 (sdl2#22 10))

(define sdl2#SDL_PIXELFORMAT_RGBA4444 (sdl2#22 11))

(define sdl2#SDL_PIXELFORMAT_ABGR4444 (sdl2#22 12))

(define sdl2#SDL_PIXELFORMAT_BGRA4444 (sdl2#22 13))

(define sdl2#SDL_PIXELFORMAT_ARGB1555 (sdl2#22 14))

(define sdl2#SDL_PIXELFORMAT_RGBA5551 (sdl2#22 15))

(define sdl2#SDL_PIXELFORMAT_ABGR1555 (sdl2#22 16))

(define sdl2#SDL_PIXELFORMAT_BGRA5551 (sdl2#22 17))

(define sdl2#SDL_PIXELFORMAT_RGB565 (sdl2#22 18))

(define sdl2#SDL_PIXELFORMAT_BGR565 (sdl2#22 19))

(define sdl2#SDL_PIXELFORMAT_RGB24 (sdl2#22 20))

(define sdl2#SDL_PIXELFORMAT_BGR24 (sdl2#22 21))

(define sdl2#SDL_PIXELFORMAT_RGB888 (sdl2#22 22))

(define sdl2#SDL_PIXELFORMAT_RGBX8888 (sdl2#22 23))

(define sdl2#SDL_PIXELFORMAT_BGR888 (sdl2#22 24))

(define sdl2#SDL_PIXELFORMAT_BGRX8888 (sdl2#22 25))

(define sdl2#SDL_PIXELFORMAT_ARGB8888 (sdl2#22 26))

(define sdl2#SDL_PIXELFORMAT_RGBA8888 (sdl2#22 27))

(define sdl2#SDL_PIXELFORMAT_ABGR8888 (sdl2#22 28))

(define sdl2#SDL_PIXELFORMAT_BGRA8888 (sdl2#22 29))

(define sdl2#SDL_PIXELFORMAT_ARGB2101010 (sdl2#22 30))

(define sdl2#SDL_PIXELFORMAT_YV12 (sdl2#22 31))

(define sdl2#SDL_PIXELFORMAT_IYUV (sdl2#22 32))

(define sdl2#SDL_PIXELFORMAT_YUY2 (sdl2#22 33))

(define sdl2#SDL_PIXELFORMAT_UYVY (sdl2#22 34))

(define sdl2#SDL_PIXELFORMAT_YVYU (sdl2#22 35))

(define sdl2#SDL_PIXELTYPE sdl2#23)

(define sdl2#SDL_PIXELORDER sdl2#24)

(define sdl2#SDL_PIXELLAYOUT sdl2#25)

(define sdl2#SDL_BITSPERPIXEL sdl2#26)

(define sdl2#SDL_BYTESPERPIXEL sdl2#27)

(define sdl2#SDL_ISPIXELFORMAT_INDEXED sdl2#28)

(define sdl2#SDL_ISPIXELFORMAT_ALPHA sdl2#29)

(define sdl2#SDL_ISPIXELFORMAT_FOURCC sdl2#30)

(define sdl2#g73c-constants sdl2#31)

(define sdl2#SDL_PIXELTYPE_UNKNOWN (sdl2#31 0))

(define sdl2#SDL_PIXELTYPE_INDEX1 (sdl2#31 1))

(define sdl2#SDL_PIXELTYPE_INDEX4 (sdl2#31 2))

(define sdl2#SDL_PIXELTYPE_INDEX8 (sdl2#31 3))

(define sdl2#SDL_PIXELTYPE_PACKED8 (sdl2#31 4))

(define sdl2#SDL_PIXELTYPE_PACKED16 (sdl2#31 5))

(define sdl2#SDL_PIXELTYPE_PACKED32 (sdl2#31 6))

(define sdl2#SDL_PIXELTYPE_ARRAYU8 (sdl2#31 7))

(define sdl2#SDL_PIXELTYPE_ARRAYU16 (sdl2#31 8))

(define sdl2#SDL_PIXELTYPE_ARRAYU32 (sdl2#31 9))

(define sdl2#SDL_PIXELTYPE_ARRAYF16 (sdl2#31 10))

(define sdl2#SDL_PIXELTYPE_ARRAYF32 (sdl2#31 11))

(define sdl2#g74c-constants sdl2#32)

(define sdl2#SDL_BITMAPORDER_NONE (sdl2#32 0))

(define sdl2#SDL_BITMAPORDER_4321 (sdl2#32 1))

(define sdl2#SDL_BITMAPORDER_1234 (sdl2#32 2))

(define sdl2#g75c-constants sdl2#33)

(define sdl2#SDL_PACKEDORDER_NONE (sdl2#33 0))

(define sdl2#SDL_PACKEDORDER_XRGB (sdl2#33 1))

(define sdl2#SDL_PACKEDORDER_RGBX (sdl2#33 2))

(define sdl2#SDL_PACKEDORDER_ARGB (sdl2#33 3))

(define sdl2#SDL_PACKEDORDER_RGBA (sdl2#33 4))

(define sdl2#SDL_PACKEDORDER_XBGR (sdl2#33 5))

(define sdl2#SDL_PACKEDORDER_BGRX (sdl2#33 6))

(define sdl2#SDL_PACKEDORDER_ABGR (sdl2#33 7))

(define sdl2#SDL_PACKEDORDER_BGRA (sdl2#33 8))

(define sdl2#g76c-constants sdl2#34)

(define sdl2#SDL_ARRAYORDER_NONE (sdl2#34 0))

(define sdl2#SDL_ARRAYORDER_RGB (sdl2#34 1))

(define sdl2#SDL_ARRAYORDER_RGBA (sdl2#34 2))

(define sdl2#SDL_ARRAYORDER_ARGB (sdl2#34 3))

(define sdl2#SDL_ARRAYORDER_BGR (sdl2#34 4))

(define sdl2#SDL_ARRAYORDER_BGRA (sdl2#34 5))

(define sdl2#SDL_ARRAYORDER_ABGR (sdl2#34 6))

(define sdl2#g77c-constants sdl2#35)

(define sdl2#SDL_PACKEDLAYOUT_NONE (sdl2#35 0))

(define sdl2#SDL_PACKEDLAYOUT_332 (sdl2#35 1))

(define sdl2#SDL_PACKEDLAYOUT_4444 (sdl2#35 2))

(define sdl2#SDL_PACKEDLAYOUT_1555 (sdl2#35 3))

(define sdl2#SDL_PACKEDLAYOUT_5551 (sdl2#35 4))

(define sdl2#SDL_PACKEDLAYOUT_565 (sdl2#35 5))

(define sdl2#SDL_PACKEDLAYOUT_8888 (sdl2#35 6))

(define sdl2#SDL_PACKEDLAYOUT_2101010 (sdl2#35 7))

(define sdl2#SDL_PACKEDLAYOUT_1010102 (sdl2#35 8))

(define sdl2#g78c-constants sdl2#36)

(define sdl2#SDL_POWERSTATE_UNKNOWN (sdl2#36 0))

(define sdl2#SDL_POWERSTATE_ON_BATTERY (sdl2#36 1))

(define sdl2#SDL_POWERSTATE_NO_BATTERY (sdl2#36 2))

(define sdl2#SDL_POWERSTATE_CHARGING (sdl2#36 3))

(define sdl2#SDL_POWERSTATE_CHARGED (sdl2#36 4))

(define sdl2#g79c-constants sdl2#37)

(define sdl2#SDL_RENDERER_SOFTWARE (sdl2#37 0))

(define sdl2#SDL_RENDERER_ACCELERATED (sdl2#37 1))

(define sdl2#SDL_RENDERER_PRESENTVSYNC (sdl2#37 2))

(define sdl2#SDL_RENDERER_TARGETTEXTURE (sdl2#37 3))

(define sdl2#g80c-constants sdl2#38)

(define sdl2#SDL_FLIP_NONE (sdl2#38 0))

(define sdl2#SDL_FLIP_HORIZONTAL (sdl2#38 1))

(define sdl2#SDL_FLIP_VERTICAL (sdl2#38 2))

(define sdl2#g81c-constants sdl2#39)

(define sdl2#SDL_SYSWM_UNKNOWN (sdl2#39 0))

(define sdl2#SDL_SYSWM_WINDOWS (sdl2#39 1))

(define sdl2#SDL_SYSWM_X11 (sdl2#39 2))

(define sdl2#SDL_SYSWM_DIRECTFB (sdl2#39 3))

(define sdl2#SDL_SYSWM_COCOA (sdl2#39 4))

(define sdl2#SDL_SYSWM_UIKIT (sdl2#39 5))

(define sdl2#g82c-constants sdl2#40)

(define sdl2#SDL_TEXTUREACCESS_STATIC (sdl2#40 0))

(define sdl2#SDL_TEXTUREACCESS_STREAMING (sdl2#40 1))

(define sdl2#SDL_TEXTUREACCESS_TARGET (sdl2#40 2))

(define sdl2#g83c-constants sdl2#41)

(define sdl2#SDL_TEXTUREMODULATE_NONE (sdl2#41 0))

(define sdl2#SDL_TEXTUREMODULATE_COLOR (sdl2#41 1))

(define sdl2#SDL_TEXTUREMODULATE_ALPHA (sdl2#41 2))

#!void

(define sdl2#g84c-constants sdl2#42)

(define sdl2#SDL_WINDOWEVENT_SHOWN (sdl2#42 0))

(define sdl2#SDL_WINDOWEVENT_HIDDEN (sdl2#42 1))

(define sdl2#SDL_WINDOWEVENT_EXPOSED (sdl2#42 2))

(define sdl2#SDL_WINDOWEVENT_MOVED (sdl2#42 3))

(define sdl2#SDL_WINDOWEVENT_RESIZED (sdl2#42 4))

(define sdl2#SDL_WINDOWEVENT_SIZE_CHANGED (sdl2#42 5))

(define sdl2#SDL_WINDOWEVENT_MINIMIZED (sdl2#42 6))

(define sdl2#SDL_WINDOWEVENT_MAXIMIZED (sdl2#42 7))

(define sdl2#SDL_WINDOWEVENT_RESTORED (sdl2#42 8))

(define sdl2#SDL_WINDOWEVENT_ENTER (sdl2#42 9))

(define sdl2#SDL_WINDOWEVENT_LEAVE (sdl2#42 10))

(define sdl2#SDL_WINDOWEVENT_FOCUS_GAINED (sdl2#42 11))

(define sdl2#SDL_WINDOWEVENT_FOCUS_LOST (sdl2#42 12))

(define sdl2#SDL_WINDOWEVENT_CLOSE (sdl2#42 13))

(define sdl2#g85c-constants sdl2#43)

(define sdl2#SDL_WINDOW_FULLSCREEN (sdl2#43 0))

(define sdl2#SDL_WINDOW_FULLSCREEN_DESKTOP (sdl2#43 1))

(define sdl2#SDL_WINDOW_OPENGL (sdl2#43 2))

(define sdl2#SDL_WINDOW_SHOWN (sdl2#43 3))

(define sdl2#SDL_WINDOW_HIDDEN (sdl2#43 4))

(define sdl2#SDL_WINDOW_BORDERLESS (sdl2#43 5))

(define sdl2#SDL_WINDOW_RESIZABLE (sdl2#43 6))

(define sdl2#SDL_WINDOW_MINIMIZED (sdl2#43 7))

(define sdl2#SDL_WINDOW_MAXIMIZED (sdl2#43 8))

(define sdl2#SDL_WINDOW_INPUT_GRABBED (sdl2#43 9))

(define sdl2#SDL_WINDOW_INPUT_FOCUS (sdl2#43 10))

(define sdl2#SDL_WINDOW_MOUSE_FOCUS (sdl2#43 11))

(define sdl2#SDL_WINDOW_FOREIGN (sdl2#43 12))

(define sdl2#SDL_WINDOW_ALLOW_HIGHDPI (sdl2#43 13))

(define sdl2#g86c-constants sdl2#44)

(define sdl2#SDL_WINDOWPOS_CENTERED (sdl2#44 0))

(define sdl2#SDL_WINDOWPOS_UNDEFINED (sdl2#44 1))

#!void

(define sdl2#g87c-constants sdl2#45)

(define sdl2#SDL_FALSE (sdl2#45 0))

(define sdl2#SDL_TRUE (sdl2#45 1))

(define sdl2#alloc-SDL_AudioCVT sdl2#46)

(define sdl2#*->SDL_AudioCVT sdl2#47)

(define sdl2#SDL_AudioCVT-needed sdl2#48)

(define sdl2#SDL_AudioCVT-needed-set! sdl2#49)

(define sdl2#SDL_AudioCVT-src_format sdl2#50)

(define sdl2#SDL_AudioCVT-src_format-set! sdl2#51)

(define sdl2#SDL_AudioCVT-dst_format sdl2#52)

(define sdl2#SDL_AudioCVT-dst_format-set! sdl2#53)

(define sdl2#SDL_AudioCVT-rate_incr sdl2#54)

(define sdl2#SDL_AudioCVT-rate_incr-set! sdl2#55)

(define sdl2#SDL_AudioCVT-buf sdl2#56)

(define sdl2#SDL_AudioCVT-buf-set! sdl2#57)

(define sdl2#SDL_AudioCVT-len sdl2#58)

(define sdl2#SDL_AudioCVT-len-set! sdl2#59)

(define sdl2#SDL_AudioCVT-len_cvt sdl2#60)

(define sdl2#SDL_AudioCVT-len_cvt-set! sdl2#61)

(define sdl2#SDL_AudioCVT-len_mult sdl2#62)

(define sdl2#SDL_AudioCVT-len_mult-set! sdl2#63)

(define sdl2#SDL_AudioCVT-len_ratio sdl2#64)

(define sdl2#SDL_AudioCVT-len_ratio-set! sdl2#65)

(define sdl2#alloc-SDL_AudioSpec sdl2#66)

(define sdl2#*->SDL_AudioSpec sdl2#67)

(define sdl2#SDL_AudioSpec-freq sdl2#68)

(define sdl2#SDL_AudioSpec-freq-set! sdl2#69)

(define sdl2#SDL_AudioSpec-format sdl2#70)

(define sdl2#SDL_AudioSpec-format-set! sdl2#71)

(define sdl2#SDL_AudioSpec-channels sdl2#72)

(define sdl2#SDL_AudioSpec-channels-set! sdl2#73)

(define sdl2#SDL_AudioSpec-silence sdl2#74)

(define sdl2#SDL_AudioSpec-silence-set! sdl2#75)

(define sdl2#SDL_AudioSpec-samples sdl2#76)

(define sdl2#SDL_AudioSpec-samples-set! sdl2#77)

(define sdl2#SDL_AudioSpec-size sdl2#78)

(define sdl2#SDL_AudioSpec-size-set! sdl2#79)

(define sdl2#SDL_AudioSpec-callback sdl2#80)

(define sdl2#SDL_AudioSpec-callback-set! sdl2#81)

(define sdl2#SDL_AudioSpec-userdata sdl2#82)

(define sdl2#SDL_AudioSpec-userdata-set! sdl2#83)

(define sdl2#alloc-SDL_Color sdl2#84)

(define sdl2#*->SDL_Color sdl2#85)

(define sdl2#SDL_Color-r sdl2#86)

(define sdl2#SDL_Color-r-set! sdl2#87)

(define sdl2#SDL_Color-g sdl2#88)

(define sdl2#SDL_Color-g-set! sdl2#89)

(define sdl2#SDL_Color-b sdl2#90)

(define sdl2#SDL_Color-b-set! sdl2#91)

(define sdl2#SDL_Color-a sdl2#92)

(define sdl2#SDL_Color-a-set! sdl2#93)

#!void

(define sdl2#alloc-SDL_DisplayMode sdl2#94)

(define sdl2#*->SDL_DisplayMode sdl2#95)

(define sdl2#SDL_DisplayMode-format sdl2#96)

(define sdl2#SDL_DisplayMode-format-set! sdl2#97)

(define sdl2#SDL_DisplayMode-w sdl2#98)

(define sdl2#SDL_DisplayMode-w-set! sdl2#99)

(define sdl2#SDL_DisplayMode-h sdl2#100)

(define sdl2#SDL_DisplayMode-h-set! sdl2#101)

(define sdl2#SDL_DisplayMode-refresh_rate sdl2#102)

(define sdl2#SDL_DisplayMode-refresh_rate-set! sdl2#103)

(define sdl2#SDL_DisplayMode-driverdata sdl2#104)

(define sdl2#SDL_DisplayMode-driverdata-set! sdl2#105)

(define sdl2#alloc-SDL_DollarGestureEvent sdl2#106)

(define sdl2#*->SDL_DollarGestureEvent sdl2#107)

(define sdl2#SDL_DollarGestureEvent-type sdl2#108)

(define sdl2#SDL_DollarGestureEvent-type-set! sdl2#109)

(define sdl2#SDL_DollarGestureEvent-timestamp sdl2#110)

(define sdl2#SDL_DollarGestureEvent-timestamp-set! sdl2#111)

(define sdl2#SDL_DollarGestureEvent-touchId sdl2#112)

(define sdl2#SDL_DollarGestureEvent-touchId-set! sdl2#113)

(define sdl2#SDL_DollarGestureEvent-gestureId sdl2#114)

(define sdl2#SDL_DollarGestureEvent-gestureId-set! sdl2#115)

(define sdl2#SDL_DollarGestureEvent-numFingers sdl2#116)

(define sdl2#SDL_DollarGestureEvent-numFingers-set! sdl2#117)

(define sdl2#SDL_DollarGestureEvent-error sdl2#118)

(define sdl2#SDL_DollarGestureEvent-error-set! sdl2#119)

(define sdl2#SDL_DollarGestureEvent-x sdl2#120)

(define sdl2#SDL_DollarGestureEvent-x-set! sdl2#121)

(define sdl2#SDL_DollarGestureEvent-y sdl2#122)

(define sdl2#SDL_DollarGestureEvent-y-set! sdl2#123)

(define sdl2#alloc-SDL_DropEvent sdl2#124)

(define sdl2#*->SDL_DropEvent sdl2#125)

(define sdl2#SDL_DropEvent-type sdl2#126)

(define sdl2#SDL_DropEvent-type-set! sdl2#127)

(define sdl2#SDL_DropEvent-timestamp sdl2#128)

(define sdl2#SDL_DropEvent-timestamp-set! sdl2#129)

(define sdl2#SDL_DropEvent-file sdl2#130)

(define sdl2#SDL_DropEvent-file-set! sdl2#131)

(define sdl2#alloc-SDL_Event sdl2#132)

(define sdl2#*->SDL_Event sdl2#133)

(define sdl2#SDL_Event-type sdl2#134)

(define sdl2#SDL_Event-type-set! sdl2#135)

(define sdl2#SDL_Event-window sdl2#136)

(define sdl2#SDL_Event-window-set! sdl2#137)

(define sdl2#SDL_Event-key sdl2#138)

(define sdl2#SDL_Event-key-set! sdl2#139)

(define sdl2#SDL_Event-edit sdl2#140)

(define sdl2#SDL_Event-edit-set! sdl2#141)

(define sdl2#SDL_Event-text sdl2#142)

(define sdl2#SDL_Event-text-set! sdl2#143)

(define sdl2#SDL_Event-motion sdl2#144)

(define sdl2#SDL_Event-motion-set! sdl2#145)

(define sdl2#SDL_Event-button sdl2#146)

(define sdl2#SDL_Event-button-set! sdl2#147)

(define sdl2#SDL_Event-wheel sdl2#148)

(define sdl2#SDL_Event-wheel-set! sdl2#149)

(define sdl2#SDL_Event-jaxis sdl2#150)

(define sdl2#SDL_Event-jaxis-set! sdl2#151)

(define sdl2#SDL_Event-jball sdl2#152)

(define sdl2#SDL_Event-jball-set! sdl2#153)

(define sdl2#SDL_Event-jhat sdl2#154)

(define sdl2#SDL_Event-jhat-set! sdl2#155)

(define sdl2#SDL_Event-jbutton sdl2#156)

(define sdl2#SDL_Event-jbutton-set! sdl2#157)

(define sdl2#SDL_Event-jdevice sdl2#158)

(define sdl2#SDL_Event-jdevice-set! sdl2#159)

(define sdl2#SDL_Event-caxis sdl2#160)

(define sdl2#SDL_Event-caxis-set! sdl2#161)

(define sdl2#SDL_Event-cbutton sdl2#162)

(define sdl2#SDL_Event-cbutton-set! sdl2#163)

(define sdl2#SDL_Event-cdevice sdl2#164)

(define sdl2#SDL_Event-cdevice-set! sdl2#165)

(define sdl2#SDL_Event-quit sdl2#166)

(define sdl2#SDL_Event-quit-set! sdl2#167)

(define sdl2#SDL_Event-user sdl2#168)

(define sdl2#SDL_Event-user-set! sdl2#169)

(define sdl2#SDL_Event-syswm sdl2#170)

(define sdl2#SDL_Event-syswm-set! sdl2#171)

(define sdl2#SDL_Event-tfinger sdl2#172)

(define sdl2#SDL_Event-tfinger-set! sdl2#173)

(define sdl2#SDL_Event-mgesture sdl2#174)

(define sdl2#SDL_Event-mgesture-set! sdl2#175)

(define sdl2#SDL_Event-dgesture sdl2#176)

(define sdl2#SDL_Event-dgesture-set! sdl2#177)

(define sdl2#SDL_Event-drop sdl2#178)

(define sdl2#SDL_Event-drop-set! sdl2#179)

(define sdl2#alloc-SDL_Finger sdl2#180)

(define sdl2#*->SDL_Finger sdl2#181)

(define sdl2#SDL_Finger-id sdl2#182)

(define sdl2#SDL_Finger-id-set! sdl2#183)

(define sdl2#SDL_Finger-x sdl2#184)

(define sdl2#SDL_Finger-x-set! sdl2#185)

(define sdl2#SDL_Finger-y sdl2#186)

(define sdl2#SDL_Finger-y-set! sdl2#187)

(define sdl2#SDL_Finger-pressure sdl2#188)

(define sdl2#SDL_Finger-pressure-set! sdl2#189)

#!void

#!void

(define sdl2#alloc-SDL_Keysym sdl2#190)

(define sdl2#*->SDL_Keysym sdl2#191)

(define sdl2#SDL_Keysym-scancode sdl2#192)

(define sdl2#SDL_Keysym-scancode-set! sdl2#193)

(define sdl2#SDL_Keysym-sym sdl2#194)

(define sdl2#SDL_Keysym-sym-set! sdl2#195)

(define sdl2#SDL_Keysym-mod sdl2#196)

(define sdl2#SDL_Keysym-mod-set! sdl2#197)

(define sdl2#alloc-SDL_KeyboardEvent sdl2#198)

(define sdl2#*->SDL_KeyboardEvent sdl2#199)

(define sdl2#SDL_KeyboardEvent-type sdl2#200)

(define sdl2#SDL_KeyboardEvent-type-set! sdl2#201)

(define sdl2#SDL_KeyboardEvent-timestamp sdl2#202)

(define sdl2#SDL_KeyboardEvent-timestamp-set! sdl2#203)

(define sdl2#SDL_KeyboardEvent-windowID sdl2#204)

(define sdl2#SDL_KeyboardEvent-windowID-set! sdl2#205)

(define sdl2#SDL_KeyboardEvent-state sdl2#206)

(define sdl2#SDL_KeyboardEvent-state-set! sdl2#207)

(define sdl2#SDL_KeyboardEvent-repeat sdl2#208)

(define sdl2#SDL_KeyboardEvent-repeat-set! sdl2#209)

(define sdl2#SDL_KeyboardEvent-keysym sdl2#210)

(define sdl2#SDL_KeyboardEvent-keysym-set! sdl2#211)

(define sdl2#alloc-SDL_MouseButtonEvent sdl2#212)

(define sdl2#*->SDL_MouseButtonEvent sdl2#213)

(define sdl2#SDL_MouseButtonEvent-type sdl2#214)

(define sdl2#SDL_MouseButtonEvent-type-set! sdl2#215)

(define sdl2#SDL_MouseButtonEvent-timestamp sdl2#216)

(define sdl2#SDL_MouseButtonEvent-timestamp-set! sdl2#217)

(define sdl2#SDL_MouseButtonEvent-windowID sdl2#218)

(define sdl2#SDL_MouseButtonEvent-windowID-set! sdl2#219)

(define sdl2#SDL_MouseButtonEvent-which sdl2#220)

(define sdl2#SDL_MouseButtonEvent-which-set! sdl2#221)

(define sdl2#SDL_MouseButtonEvent-button sdl2#222)

(define sdl2#SDL_MouseButtonEvent-button-set! sdl2#223)

(define sdl2#SDL_MouseButtonEvent-state sdl2#224)

(define sdl2#SDL_MouseButtonEvent-state-set! sdl2#225)

(define sdl2#SDL_MouseButtonEvent-clicks sdl2#226)

(define sdl2#SDL_MouseButtonEvent-clicks-set! sdl2#227)

(define sdl2#SDL_MouseButtonEvent-x sdl2#228)

(define sdl2#SDL_MouseButtonEvent-x-set! sdl2#229)

(define sdl2#SDL_MouseButtonEvent-y sdl2#230)

(define sdl2#SDL_MouseButtonEvent-y-set! sdl2#231)

(define sdl2#alloc-SDL_MouseMotionEvent sdl2#232)

(define sdl2#*->SDL_MouseMotionEvent sdl2#233)

(define sdl2#SDL_MouseMotionEvent-type sdl2#234)

(define sdl2#SDL_MouseMotionEvent-type-set! sdl2#235)

(define sdl2#SDL_MouseMotionEvent-timestamp sdl2#236)

(define sdl2#SDL_MouseMotionEvent-timestamp-set! sdl2#237)

(define sdl2#SDL_MouseMotionEvent-windowID sdl2#238)

(define sdl2#SDL_MouseMotionEvent-windowID-set! sdl2#239)

(define sdl2#SDL_MouseMotionEvent-which sdl2#240)

(define sdl2#SDL_MouseMotionEvent-which-set! sdl2#241)

(define sdl2#SDL_MouseMotionEvent-state sdl2#242)

(define sdl2#SDL_MouseMotionEvent-state-set! sdl2#243)

(define sdl2#SDL_MouseMotionEvent-x sdl2#244)

(define sdl2#SDL_MouseMotionEvent-x-set! sdl2#245)

(define sdl2#SDL_MouseMotionEvent-y sdl2#246)

(define sdl2#SDL_MouseMotionEvent-y-set! sdl2#247)

(define sdl2#SDL_MouseMotionEvent-xrel sdl2#248)

(define sdl2#SDL_MouseMotionEvent-xrel-set! sdl2#249)

(define sdl2#SDL_MouseMotionEvent-yrel sdl2#250)

(define sdl2#SDL_MouseMotionEvent-yrel-set! sdl2#251)

(define sdl2#alloc-SDL_MouseWheelEvent sdl2#252)

(define sdl2#*->SDL_MouseWheelEvent sdl2#253)

(define sdl2#SDL_MouseWheelEvent-type sdl2#254)

(define sdl2#SDL_MouseWheelEvent-type-set! sdl2#255)

(define sdl2#SDL_MouseWheelEvent-timestamp sdl2#256)

(define sdl2#SDL_MouseWheelEvent-timestamp-set! sdl2#257)

(define sdl2#SDL_MouseWheelEvent-windowID sdl2#258)

(define sdl2#SDL_MouseWheelEvent-windowID-set! sdl2#259)

(define sdl2#SDL_MouseWheelEvent-which sdl2#260)

(define sdl2#SDL_MouseWheelEvent-which-set! sdl2#261)

(define sdl2#SDL_MouseWheelEvent-x sdl2#262)

(define sdl2#SDL_MouseWheelEvent-x-set! sdl2#263)

(define sdl2#SDL_MouseWheelEvent-y sdl2#264)

(define sdl2#SDL_MouseWheelEvent-y-set! sdl2#265)

(define sdl2#alloc-SDL_MultiGestureEvent sdl2#266)

(define sdl2#*->SDL_MultiGestureEvent sdl2#267)

(define sdl2#SDL_MultiGestureEvent-type sdl2#268)

(define sdl2#SDL_MultiGestureEvent-type-set! sdl2#269)

(define sdl2#SDL_MultiGestureEvent-timestamp sdl2#270)

(define sdl2#SDL_MultiGestureEvent-timestamp-set! sdl2#271)

(define sdl2#SDL_MultiGestureEvent-touchId sdl2#272)

(define sdl2#SDL_MultiGestureEvent-touchId-set! sdl2#273)

(define sdl2#SDL_MultiGestureEvent-dTheta sdl2#274)

(define sdl2#SDL_MultiGestureEvent-dTheta-set! sdl2#275)

(define sdl2#SDL_MultiGestureEvent-dDist sdl2#276)

(define sdl2#SDL_MultiGestureEvent-dDist-set! sdl2#277)

(define sdl2#SDL_MultiGestureEvent-x sdl2#278)

(define sdl2#SDL_MultiGestureEvent-x-set! sdl2#279)

(define sdl2#SDL_MultiGestureEvent-y sdl2#280)

(define sdl2#SDL_MultiGestureEvent-y-set! sdl2#281)

(define sdl2#SDL_MultiGestureEvent-numFingers sdl2#282)

(define sdl2#SDL_MultiGestureEvent-numFingers-set! sdl2#283)

(define sdl2#alloc-SDL_Palette sdl2#284)

(define sdl2#*->SDL_Palette sdl2#285)

(define sdl2#SDL_Palette-ncolors sdl2#286)

(define sdl2#SDL_Palette-ncolors-set! sdl2#287)

(define sdl2#SDL_Palette-colors-ref sdl2#288)

(define sdl2#alloc-SDL_PixelFormat sdl2#289)

(define sdl2#*->SDL_PixelFormat sdl2#290)

(define sdl2#SDL_PixelFormat-format sdl2#291)

(define sdl2#SDL_PixelFormat-format-set! sdl2#292)

(define sdl2#SDL_PixelFormat-palette sdl2#293)

(define sdl2#SDL_PixelFormat-palette-set! sdl2#294)

(define sdl2#SDL_PixelFormat-BitsPerPixel sdl2#295)

(define sdl2#SDL_PixelFormat-BitsPerPixel-set! sdl2#296)

(define sdl2#SDL_PixelFormat-BytesPerPixel sdl2#297)

(define sdl2#SDL_PixelFormat-BytesPerPixel-set! sdl2#298)

(define sdl2#SDL_PixelFormat-Rmask sdl2#299)

(define sdl2#SDL_PixelFormat-Rmask-set! sdl2#300)

(define sdl2#SDL_PixelFormat-Gmask sdl2#301)

(define sdl2#SDL_PixelFormat-Gmask-set! sdl2#302)

(define sdl2#SDL_PixelFormat-Bmask sdl2#303)

(define sdl2#SDL_PixelFormat-Bmask-set! sdl2#304)

(define sdl2#SDL_PixelFormat-Amask sdl2#305)

(define sdl2#SDL_PixelFormat-Amask-set! sdl2#306)

(define sdl2#alloc-SDL_Point sdl2#307)

(define sdl2#*->SDL_Point sdl2#308)

(define sdl2#SDL_Point-x sdl2#309)

(define sdl2#SDL_Point-x-set! sdl2#310)

(define sdl2#SDL_Point-y sdl2#311)

(define sdl2#SDL_Point-y-set! sdl2#312)

(define sdl2#alloc-SDL_QuitEvent sdl2#313)

(define sdl2#*->SDL_QuitEvent sdl2#314)

(define sdl2#SDL_QuitEvent-type sdl2#315)

(define sdl2#SDL_QuitEvent-type-set! sdl2#316)

(define sdl2#SDL_QuitEvent-timestamp sdl2#317)

(define sdl2#SDL_QuitEvent-timestamp-set! sdl2#318)

(define sdl2#alloc-SDL_Rect sdl2#319)

(define sdl2#*->SDL_Rect sdl2#320)

(define sdl2#SDL_Rect-x sdl2#321)

(define sdl2#SDL_Rect-x-set! sdl2#322)

(define sdl2#SDL_Rect-y sdl2#323)

(define sdl2#SDL_Rect-y-set! sdl2#324)

(define sdl2#SDL_Rect-w sdl2#325)

(define sdl2#SDL_Rect-w-set! sdl2#326)

(define sdl2#SDL_Rect-h sdl2#327)

(define sdl2#SDL_Rect-h-set! sdl2#328)

(define sdl2#alloc-SDL_RendererInfo sdl2#329)

(define sdl2#*->SDL_RendererInfo sdl2#330)

(define sdl2#SDL_RendererInfo-name sdl2#331)

(define sdl2#SDL_RendererInfo-name-set! sdl2#332)

(define sdl2#SDL_RendererInfo-flags sdl2#333)

(define sdl2#SDL_RendererInfo-flags-set! sdl2#334)

(define sdl2#SDL_RendererInfo-num_texture_formats sdl2#335)

(define sdl2#SDL_RendererInfo-num_texture_formats-set! sdl2#336)

(define sdl2#SDL_RendererInfo-texture_formats-ref sdl2#337)

(define sdl2#SDL_RendererInfo-texture_formats-set! sdl2#338)

(define sdl2#SDL_RendererInfo-max_texture_width sdl2#339)

(define sdl2#SDL_RendererInfo-max_texture_width-set! sdl2#340)

(define sdl2#SDL_RendererInfo-max_texture_height sdl2#341)

(define sdl2#SDL_RendererInfo-max_texture_height-set! sdl2#342)

(define sdl2#alloc-SDL_Surface sdl2#343)

(define sdl2#*->SDL_Surface sdl2#344)

(define sdl2#SDL_Surface-format sdl2#345)

(define sdl2#SDL_Surface-format-set! sdl2#346)

(define sdl2#SDL_Surface-w sdl2#347)

(define sdl2#SDL_Surface-w-set! sdl2#348)

(define sdl2#SDL_Surface-h sdl2#349)

(define sdl2#SDL_Surface-h-set! sdl2#350)

(define sdl2#SDL_Surface-pitch sdl2#351)

(define sdl2#SDL_Surface-pitch-set! sdl2#352)

(define sdl2#SDL_Surface-pixels sdl2#353)

(define sdl2#SDL_Surface-pixels-set! sdl2#354)

(define sdl2#SDL_Surface-userdata sdl2#355)

(define sdl2#SDL_Surface-userdata-set! sdl2#356)

(define sdl2#SDL_Surface-clip_rect sdl2#357)

(define sdl2#SDL_Surface-clip_rect-set! sdl2#358)

(define sdl2#SDL_Surface-refcount sdl2#359)

(define sdl2#SDL_Surface-refcount-set! sdl2#360)

(define sdl2#alloc-SDL_SysWMEvent sdl2#361)

(define sdl2#*->SDL_SysWMEvent sdl2#362)

(define sdl2#SDL_SysWMEvent-type sdl2#363)

(define sdl2#SDL_SysWMEvent-type-set! sdl2#364)

(define sdl2#SDL_SysWMEvent-timestamp sdl2#365)

(define sdl2#SDL_SysWMEvent-timestamp-set! sdl2#366)

(define sdl2#SDL_SysWMEvent-msg sdl2#367)

(define sdl2#SDL_SysWMEvent-msg-set! sdl2#368)

(define sdl2#alloc-SDL_SysWMinfo sdl2#369)

(define sdl2#*->SDL_SysWMinfo sdl2#370)

(define sdl2#SDL_SysWMinfo-version sdl2#371)

(define sdl2#SDL_SysWMinfo-version-set! sdl2#372)

(define sdl2#SDL_SysWMinfo-subsystem sdl2#373)

(define sdl2#SDL_SysWMinfo-subsystem-set! sdl2#374)

(define sdl2#alloc-SDL_SysWMmsg sdl2#375)

(define sdl2#*->SDL_SysWMmsg sdl2#376)

(define sdl2#SDL_SysWMmsg-version sdl2#377)

(define sdl2#SDL_SysWMmsg-version-set! sdl2#378)

(define sdl2#SDL_SysWMmsg-subsystem sdl2#379)

(define sdl2#SDL_SysWMmsg-subsystem-set! sdl2#380)

(define sdl2#alloc-SDL_TextEditingEvent sdl2#381)

(define sdl2#*->SDL_TextEditingEvent sdl2#382)

(define sdl2#SDL_TextEditingEvent-type sdl2#383)

(define sdl2#SDL_TextEditingEvent-type-set! sdl2#384)

(define sdl2#SDL_TextEditingEvent-timestamp sdl2#385)

(define sdl2#SDL_TextEditingEvent-timestamp-set! sdl2#386)

(define sdl2#SDL_TextEditingEvent-windowID sdl2#387)

(define sdl2#SDL_TextEditingEvent-windowID-set! sdl2#388)

(define sdl2#SDL_TextEditingEvent-text-ref sdl2#389)

(define sdl2#SDL_TextEditingEvent-text-set! sdl2#390)

(define sdl2#SDL_TextEditingEvent-start sdl2#391)

(define sdl2#SDL_TextEditingEvent-start-set! sdl2#392)

(define sdl2#SDL_TextEditingEvent-length sdl2#393)

(define sdl2#SDL_TextEditingEvent-length-set! sdl2#394)

(define sdl2#alloc-SDL_TextInputEvent sdl2#395)

(define sdl2#*->SDL_TextInputEvent sdl2#396)

(define sdl2#SDL_TextInputEvent-type sdl2#397)

(define sdl2#SDL_TextInputEvent-type-set! sdl2#398)

(define sdl2#SDL_TextInputEvent-timestamp sdl2#399)

(define sdl2#SDL_TextInputEvent-timestamp-set! sdl2#400)

(define sdl2#SDL_TextInputEvent-windowID sdl2#401)

(define sdl2#SDL_TextInputEvent-windowID-set! sdl2#402)

(define sdl2#SDL_TextInputEvent-text-ref sdl2#403)

(define sdl2#SDL_TextInputEvent-text-set! sdl2#404)

(define sdl2#alloc-SDL_TouchFingerEvent sdl2#405)

(define sdl2#*->SDL_TouchFingerEvent sdl2#406)

(define sdl2#SDL_TouchFingerEvent-type sdl2#407)

(define sdl2#SDL_TouchFingerEvent-type-set! sdl2#408)

(define sdl2#SDL_TouchFingerEvent-timestamp sdl2#409)

(define sdl2#SDL_TouchFingerEvent-timestamp-set! sdl2#410)

(define sdl2#SDL_TouchFingerEvent-touchId sdl2#411)

(define sdl2#SDL_TouchFingerEvent-touchId-set! sdl2#412)

(define sdl2#SDL_TouchFingerEvent-fingerId sdl2#413)

(define sdl2#SDL_TouchFingerEvent-fingerId-set! sdl2#414)

(define sdl2#SDL_TouchFingerEvent-x sdl2#415)

(define sdl2#SDL_TouchFingerEvent-x-set! sdl2#416)

(define sdl2#SDL_TouchFingerEvent-y sdl2#417)

(define sdl2#SDL_TouchFingerEvent-y-set! sdl2#418)

(define sdl2#SDL_TouchFingerEvent-dx sdl2#419)

(define sdl2#SDL_TouchFingerEvent-dx-set! sdl2#420)

(define sdl2#SDL_TouchFingerEvent-dy sdl2#421)

(define sdl2#SDL_TouchFingerEvent-dy-set! sdl2#422)

(define sdl2#SDL_TouchFingerEvent-pressure sdl2#423)

(define sdl2#SDL_TouchFingerEvent-pressure-set! sdl2#424)

(define sdl2#alloc-SDL_UserEvent sdl2#425)

(define sdl2#*->SDL_UserEvent sdl2#426)

(define sdl2#SDL_UserEvent-type sdl2#427)

(define sdl2#SDL_UserEvent-type-set! sdl2#428)

(define sdl2#SDL_UserEvent-timestamp sdl2#429)

(define sdl2#SDL_UserEvent-timestamp-set! sdl2#430)

(define sdl2#SDL_UserEvent-windowID sdl2#431)

(define sdl2#SDL_UserEvent-windowID-set! sdl2#432)

(define sdl2#SDL_UserEvent-code sdl2#433)

(define sdl2#SDL_UserEvent-code-set! sdl2#434)

(define sdl2#SDL_UserEvent-data1 sdl2#435)

(define sdl2#SDL_UserEvent-data1-set! sdl2#436)

(define sdl2#SDL_UserEvent-data2 sdl2#437)

(define sdl2#SDL_UserEvent-data2-set! sdl2#438)

(define sdl2#alloc-SDL_WindowEvent sdl2#439)

(define sdl2#*->SDL_WindowEvent sdl2#440)

(define sdl2#SDL_WindowEvent-type sdl2#441)

(define sdl2#SDL_WindowEvent-type-set! sdl2#442)

(define sdl2#SDL_WindowEvent-timestamp sdl2#443)

(define sdl2#SDL_WindowEvent-timestamp-set! sdl2#444)

(define sdl2#SDL_WindowEvent-windowID sdl2#445)

(define sdl2#SDL_WindowEvent-windowID-set! sdl2#446)

(define sdl2#SDL_WindowEvent-event sdl2#447)

(define sdl2#SDL_WindowEvent-event-set! sdl2#448)

(define sdl2#SDL_WindowEvent-data1 sdl2#449)

(define sdl2#SDL_WindowEvent-data1-set! sdl2#450)

(define sdl2#SDL_WindowEvent-data2 sdl2#451)

(define sdl2#SDL_WindowEvent-data2-set! sdl2#452)

#!void

(define sdl2#alloc-SDL_version sdl2#453)

(define sdl2#*->SDL_version sdl2#454)

(define sdl2#SDL_version-major sdl2#455)

(define sdl2#SDL_version-major-set! sdl2#456)

(define sdl2#SDL_version-minor sdl2#457)

(define sdl2#SDL_version-minor-set! sdl2#458)

(define sdl2#SDL_version-patch sdl2#459)

(define sdl2#SDL_version-patch-set! sdl2#460)

(define sdl2#SDL_AddEventWatch sdl2#461)

(define sdl2#SDL_AddHintCallback sdl2#462)

(define sdl2#SDL_AddTimer sdl2#463)

(define sdl2#SDL_AllocFormat sdl2#464)

(define sdl2#SDL_AllocPalette sdl2#465)

(define sdl2#SDL_AllocRW sdl2#466)

#!void

#!void

(define sdl2#SDL_AudioInit sdl2#467)

(define sdl2#SDL_AudioQuit sdl2#468)

(define sdl2#SDL_BlitScaled sdl2#469)

(define sdl2#SDL_BlitSurface sdl2#470)

(define sdl2#SDL_BuildAudioCVT sdl2#471)

(define sdl2#SDL_CalculateGammaRamp sdl2#472)

(define sdl2#SDL_ClearError sdl2#473)

(define sdl2#SDL_ClearHints sdl2#474)

(define sdl2#SDL_CloseAudio sdl2#475)

(define sdl2#SDL_CloseAudioDevice sdl2#476)

(define sdl2#SDL_CompilerBarrier sdl2#477)

(define sdl2#SDL_CondBroadcast sdl2#478)

(define sdl2#SDL_CondSignal sdl2#479)

(define sdl2#SDL_CondWait sdl2#480)

(define sdl2#SDL_CondWaitTimeout sdl2#481)

(define sdl2#SDL_ConvertAudio sdl2#482)

(define sdl2#SDL_ConvertPixels sdl2#483)

(define sdl2#SDL_ConvertSurface sdl2#484)

(define sdl2#SDL_ConvertSurfaceFormat sdl2#485)

(define sdl2#SDL_CreateColorCursor sdl2#486)

(define sdl2#SDL_CreateCond sdl2#487)

(define sdl2#SDL_CreateCursor sdl2#488)

(define sdl2#SDL_CreateMutex sdl2#489)

(define sdl2#SDL_CreateRGBSurface sdl2#490)

(define sdl2#SDL_CreateRGBSurfaceFrom sdl2#491)

(define sdl2#SDL_CreateRenderer sdl2#492)

(define sdl2#SDL_CreateSemaphore sdl2#493)

(define sdl2#SDL_CreateSoftwareRenderer sdl2#494)

(define sdl2#SDL_CreateSystemCursor sdl2#495)

(define sdl2#SDL_CreateTexture sdl2#496)

(define sdl2#SDL_CreateTextureFromSurface sdl2#497)

#!void

(define sdl2#SDL_CreateWindow sdl2#498)

(define sdl2#SDL_CreateWindowAndRenderer sdl2#499)

(define sdl2#SDL_CreateWindowFrom sdl2#500)

(define sdl2#SDL_DelEventWatch sdl2#501)

(define sdl2#SDL_DelHintCallback sdl2#502)

(define sdl2#SDL_Delay sdl2#503)

#!void

(define sdl2#SDL_DestroyRenderer sdl2#504)

#!void

(define sdl2#SDL_DestroyTexture sdl2#505)

(define sdl2#SDL_DestroyWindow sdl2#506)

#!void

(define sdl2#SDL_DisableScreenSaver sdl2#507)

(define sdl2#SDL_EnableScreenSaver sdl2#508)

(define sdl2#SDL_EnclosePoints sdl2#509)

(define sdl2#SDL_EventState sdl2#510)

(define sdl2#SDL_FillRect sdl2#511)

(define sdl2#SDL_FillRects sdl2#512)

(define sdl2#SDL_FilterEvents sdl2#513)

(define sdl2#SDL_FlushEvent sdl2#514)

(define sdl2#SDL_FlushEvents sdl2#515)

(define sdl2#SDL_FreeCursor sdl2#516)

(define sdl2#SDL_FreeFormat sdl2#517)

(define sdl2#SDL_FreePalette sdl2#518)

(define sdl2#SDL_FreeRW sdl2#519)

(define sdl2#SDL_FreeSurface sdl2#520)

(define sdl2#SDL_FreeWAV sdl2#521)

(define sdl2#SDL_GL_BindTexture sdl2#522)

(define sdl2#SDL_GL_CreateContext sdl2#523)

(define sdl2#SDL_GL_DeleteContext sdl2#524)

(define sdl2#SDL_GL_ExtensionSupported sdl2#525)

(define sdl2#SDL_GL_GetAttribute sdl2#526)

(define sdl2#SDL_GL_GetCurrentContext sdl2#527)

(define sdl2#SDL_GL_GetCurrentWindow sdl2#528)

(define sdl2#SDL_GL_GetDrawableSize sdl2#529)

(define sdl2#SDL_GL_GetProcAddress sdl2#530)

(define sdl2#SDL_GL_GetSwapInterval sdl2#531)

(define sdl2#SDL_GL_LoadLibrary sdl2#532)

(define sdl2#SDL_GL_MakeCurrent sdl2#533)

(define sdl2#SDL_GL_ResetAttributes sdl2#534)

(define sdl2#SDL_GL_SetAttribute sdl2#535)

(define sdl2#SDL_GL_SetSwapInterval sdl2#536)

(define sdl2#SDL_GL_SwapWindow sdl2#537)

(define sdl2#SDL_GL_UnbindTexture sdl2#538)

(define sdl2#SDL_GL_UnloadLibrary sdl2#539)

#!void

#!void

(define sdl2#SDL_GetAudioDeviceName sdl2#540)

(define sdl2#SDL_GetAudioDeviceStatus sdl2#541)

(define sdl2#SDL_GetAudioDriver sdl2#542)

(define sdl2#SDL_GetAudioStatus sdl2#543)

(define sdl2#SDL_GetBasePath sdl2#544)

(define sdl2#SDL_GetCPUCacheLineSize sdl2#545)

(define sdl2#SDL_GetCPUCount sdl2#546)

(define sdl2#SDL_GetClipRect sdl2#547)

(define sdl2#SDL_GetClipboardText sdl2#548)

(define sdl2#SDL_GetClosestDisplayMode sdl2#549)

(define sdl2#SDL_GetColorKey sdl2#550)

(define sdl2#SDL_GetCurrentAudioDriver sdl2#551)

(define sdl2#SDL_GetCurrentDisplayMode sdl2#552)

(define sdl2#SDL_GetCurrentVideoDriver sdl2#553)

(define sdl2#SDL_GetCursor sdl2#554)

(define sdl2#SDL_GetDefaultCursor sdl2#555)

#!void

(define sdl2#SDL_GetDesktopDisplayMode sdl2#556)

(define sdl2#SDL_GetDisplayBounds sdl2#557)

(define sdl2#SDL_GetDisplayMode sdl2#558)

(define sdl2#SDL_GetDisplayName sdl2#559)

(define sdl2#SDL_GetError sdl2#560)

(define sdl2#SDL_GetEventFilter sdl2#561)

(define sdl2#SDL_GetHint sdl2#562)

(define sdl2#SDL_GetKeyFromName sdl2#563)

(define sdl2#SDL_GetKeyFromScancode sdl2#564)

(define sdl2#SDL_GetKeyName sdl2#565)

(define sdl2#SDL_GetKeyboardFocus sdl2#566)

(define sdl2#SDL_GetKeyboardState sdl2#567)

(define sdl2#SDL_GetModState sdl2#568)

(define sdl2#SDL_GetMouseFocus sdl2#569)

(define sdl2#SDL_GetMouseState sdl2#570)

(define sdl2#SDL_GetNumAudioDevices sdl2#571)

(define sdl2#SDL_GetNumAudioDrivers sdl2#572)

(define sdl2#SDL_GetNumDisplayModes sdl2#573)

(define sdl2#SDL_GetNumRenderDrivers sdl2#574)

(define sdl2#SDL_GetNumTouchDevices sdl2#575)

(define sdl2#SDL_GetNumTouchFingers sdl2#576)

(define sdl2#SDL_GetNumVideoDisplays sdl2#577)

(define sdl2#SDL_GetNumVideoDrivers sdl2#578)

(define sdl2#SDL_GetPerformanceCounter sdl2#579)

(define sdl2#SDL_GetPerformanceFrequency sdl2#580)

(define sdl2#SDL_GetPixelFormatName sdl2#581)

(define sdl2#SDL_GetPlatform sdl2#582)

(define sdl2#SDL_GetPowerInfo sdl2#583)

(define sdl2#SDL_GetPrefPath sdl2#584)

(define sdl2#SDL_GetRGB sdl2#585)

(define sdl2#SDL_GetRGBA sdl2#586)

(define sdl2#SDL_GetRelativeMouseMode sdl2#587)

(define sdl2#SDL_GetRelativeMouseState sdl2#588)

(define sdl2#SDL_GetRenderDrawBlendMode sdl2#589)

(define sdl2#SDL_GetRenderDrawColor sdl2#590)

(define sdl2#SDL_GetRenderDriverInfo sdl2#591)

(define sdl2#SDL_GetRenderTarget sdl2#592)

(define sdl2#SDL_GetRenderer sdl2#593)

(define sdl2#SDL_GetRendererInfo sdl2#594)

(define sdl2#SDL_GetRendererOutputSize sdl2#595)

(define sdl2#SDL_GetRevision sdl2#596)

(define sdl2#SDL_GetRevisionNumber sdl2#597)

(define sdl2#SDL_GetScancodeFromKey sdl2#598)

(define sdl2#SDL_GetScancodeFromName sdl2#599)

(define sdl2#SDL_GetScancodeName sdl2#600)

(define sdl2#SDL_GetSurfaceAlphaMod sdl2#601)

(define sdl2#SDL_GetSurfaceBlendMode sdl2#602)

(define sdl2#SDL_GetSurfaceColorMod sdl2#603)

(define sdl2#SDL_GetSystemRAM sdl2#604)

(define sdl2#SDL_GetTextureAlphaMod sdl2#605)

(define sdl2#SDL_GetTextureBlendMode sdl2#606)

(define sdl2#SDL_GetTextureColorMod sdl2#607)

#!void

(define sdl2#SDL_GetTicks sdl2#608)

(define sdl2#SDL_GetTouchDevice sdl2#609)

(define sdl2#SDL_GetTouchFinger sdl2#610)

(define sdl2#SDL_GetVersion sdl2#611)

(define sdl2#SDL_GetVideoDriver sdl2#612)

(define sdl2#SDL_GetWindowBrightness sdl2#613)

(define sdl2#SDL_GetWindowData sdl2#614)

(define sdl2#SDL_GetWindowDisplayIndex sdl2#615)

(define sdl2#SDL_GetWindowDisplayMode sdl2#616)

(define sdl2#SDL_GetWindowFlags sdl2#617)

(define sdl2#SDL_GetWindowFromID sdl2#618)

(define sdl2#SDL_GetWindowGammaRamp sdl2#619)

(define sdl2#SDL_GetWindowGrab sdl2#620)

(define sdl2#SDL_GetWindowID sdl2#621)

(define sdl2#SDL_GetWindowMaximumSize sdl2#622)

(define sdl2#SDL_GetWindowMinimumSize sdl2#623)

(define sdl2#SDL_GetWindowPixelFormat sdl2#624)

(define sdl2#SDL_GetWindowPosition sdl2#625)

(define sdl2#SDL_GetWindowSize sdl2#626)

(define sdl2#SDL_GetWindowSurface sdl2#627)

(define sdl2#SDL_GetWindowTitle sdl2#628)

(define sdl2#SDL_GetWindowWMInfo sdl2#629)

#!void

(define sdl2#SDL_Has3DNow sdl2#630)

(define sdl2#SDL_HasAltiVec sdl2#631)

(define sdl2#SDL_HasAVX sdl2#632)

(define sdl2#SDL_HasClipboardText sdl2#633)

(define sdl2#SDL_HasEvent sdl2#634)

(define sdl2#SDL_HasEvents sdl2#635)

(define sdl2#SDL_HasIntersection sdl2#636)

(define sdl2#SDL_HasMMX sdl2#637)

(define sdl2#SDL_HasRDTSC sdl2#638)

(define sdl2#SDL_HasSSE sdl2#639)

(define sdl2#SDL_HasSSE2 sdl2#640)

(define sdl2#SDL_HasSSE3 sdl2#641)

(define sdl2#SDL_HasSSE41 sdl2#642)

(define sdl2#SDL_HasSSE42 sdl2#643)

(define sdl2#SDL_HasScreenKeyboardSupport sdl2#644)

(define sdl2#SDL_HideWindow sdl2#645)

(define sdl2#SDL_Init sdl2#646)

(define sdl2#SDL_InitSubSystem sdl2#647)

(define sdl2#SDL_IntersectRect sdl2#648)

(define sdl2#SDL_IntersectRectAndLine sdl2#649)

#!void

#!void

(define sdl2#SDL_IsScreenKeyboardShown sdl2#650)

(define sdl2#SDL_IsScreenSaverEnabled sdl2#651)

(define sdl2#SDL_IsTextInputActive sdl2#652)

#!void

(define sdl2#SDL_LoadBMP sdl2#653)

(define sdl2#SDL_LoadBMP_RW sdl2#654)

(define sdl2#SDL_LoadDollarTemplates sdl2#655)

(define sdl2#SDL_LoadFunction sdl2#656)

(define sdl2#SDL_LoadObject sdl2#657)

(define sdl2#SDL_LoadWAV sdl2#658)

(define sdl2#SDL_LoadWAV_RW sdl2#659)

(define sdl2#SDL_LockAudio sdl2#660)

(define sdl2#SDL_LockAudioDevice sdl2#661)

(define sdl2#SDL_LockMutex sdl2#662)

(define sdl2#SDL_LockSurface sdl2#663)

(define sdl2#SDL_LockTexture sdl2#664)

(define sdl2#SDL_Log sdl2#665)

(define sdl2#SDL_LogCritical sdl2#666)

(define sdl2#SDL_LogDebug sdl2#667)

(define sdl2#SDL_LogError sdl2#668)

(define sdl2#SDL_LogGetOutputFunction sdl2#669)

(define sdl2#SDL_LogGetPriority sdl2#670)

(define sdl2#SDL_LogInfo sdl2#671)

(define sdl2#SDL_LogMessage sdl2#672)

(define sdl2#SDL_LogResetPriorities sdl2#673)

(define sdl2#SDL_LogSetAllPriority sdl2#674)

(define sdl2#SDL_LogSetOutputFunction sdl2#675)

(define sdl2#SDL_LogSetPriority sdl2#676)

(define sdl2#SDL_LogVerbose sdl2#677)

(define sdl2#SDL_LogWarn sdl2#678)

(define sdl2#SDL_LowerBlit sdl2#679)

(define sdl2#SDL_LowerBlitScaled sdl2#680)

(define sdl2#SDL_MUSTLOCK sdl2#681)

(define sdl2#SDL_MapRGB sdl2#682)

(define sdl2#SDL_MapRGBA sdl2#683)

(define sdl2#SDL_MasksToPixelFormatEnum sdl2#684)

(define sdl2#SDL_MaximizeWindow sdl2#685)

(define sdl2#SDL_MinimizeWindow sdl2#686)

(define sdl2#SDL_MixAudio sdl2#687)

(define sdl2#SDL_MixAudioFormat sdl2#688)

(define sdl2#SDL_MouseIsHaptic sdl2#689)

(define sdl2#SDL_NumHaptics sdl2#690)

#!void

(define sdl2#SDL_OpenAudio sdl2#691)

(define sdl2#SDL_OpenAudioDevice sdl2#692)

(define sdl2#SDL_PauseAudio sdl2#693)

(define sdl2#SDL_PauseAudioDevice sdl2#694)

(define sdl2#SDL_PeepEvents sdl2#695)

(define sdl2#SDL_PixelFormatEnumToMasks sdl2#696)

(define sdl2#SDL_PollEvent sdl2#697)

(define sdl2#SDL_PumpEvents sdl2#698)

(define sdl2#SDL_PushEvent sdl2#699)

(define sdl2#SDL_QueryTexture sdl2#700)

(define sdl2#SDL_Quit sdl2#701)

(define sdl2#SDL_QuitRequested sdl2#702)

(define sdl2#SDL_QuitSubSystem sdl2#703)

(define sdl2#SDL_RWFromConstMem sdl2#704)

(define sdl2#SDL_RWFromFP sdl2#705)

(define sdl2#SDL_RWFromFile sdl2#706)

(define sdl2#SDL_RWFromMem sdl2#707)

(define sdl2#SDL_RWclose sdl2#708)

(define sdl2#SDL_RWread sdl2#709)

(define sdl2#SDL_RWseek sdl2#710)

(define sdl2#SDL_RWsize sdl2#711)

(define sdl2#SDL_RWtell sdl2#712)

(define sdl2#SDL_RWwrite sdl2#713)

(define sdl2#SDL_RaiseWindow sdl2#714)

(define sdl2#SDL_ReadBE16 sdl2#715)

(define sdl2#SDL_ReadBE32 sdl2#716)

(define sdl2#SDL_ReadBE64 sdl2#717)

(define sdl2#SDL_ReadLE16 sdl2#718)

(define sdl2#SDL_ReadLE32 sdl2#719)

(define sdl2#SDL_ReadLE64 sdl2#720)

(define sdl2#SDL_RecordGesture sdl2#721)

(define sdl2#SDL_RectEmpty sdl2#722)

(define sdl2#SDL_RectEquals sdl2#723)

(define sdl2#SDL_RegisterEvents sdl2#724)

(define sdl2#SDL_RemoveTimer sdl2#725)

(define sdl2#SDL_RenderClear sdl2#726)

(define sdl2#SDL_RenderCopy sdl2#727)

(define sdl2#SDL_RenderCopyEx sdl2#728)

(define sdl2#SDL_RenderDrawLine sdl2#729)

(define sdl2#SDL_RenderDrawLines sdl2#730)

(define sdl2#SDL_RenderDrawPoint sdl2#731)

(define sdl2#SDL_RenderDrawPoints sdl2#732)

(define sdl2#SDL_RenderDrawRect sdl2#733)

(define sdl2#SDL_RenderDrawRects sdl2#734)

(define sdl2#SDL_RenderFillRect sdl2#735)

(define sdl2#SDL_RenderFillRects sdl2#736)

(define sdl2#SDL_RenderGetClipRect sdl2#737)

(define sdl2#SDL_RenderGetLogicalSize sdl2#738)

(define sdl2#SDL_RenderGetScale sdl2#739)

(define sdl2#SDL_RenderGetViewport sdl2#740)

(define sdl2#SDL_RenderPresent sdl2#741)

(define sdl2#SDL_RenderReadPixels sdl2#742)

(define sdl2#SDL_RenderSetClipRect sdl2#743)

(define sdl2#SDL_RenderSetLogicalSize sdl2#744)

(define sdl2#SDL_RenderSetScale sdl2#745)

(define sdl2#SDL_RenderSetViewport sdl2#746)

(define sdl2#SDL_RenderTargetSupported sdl2#747)

#!void

(define sdl2#SDL_RestoreWindow sdl2#748)

(define sdl2#SDL_SaveAllDollarTemplates sdl2#749)

(define sdl2#SDL_SaveBMP sdl2#750)

(define sdl2#SDL_SaveBMP_RW sdl2#751)

(define sdl2#SDL_SaveDollarTemplate sdl2#752)

#!void

#!void

(define sdl2#SDL_SetClipRect sdl2#753)

(define sdl2#SDL_SetClipboardText sdl2#754)

(define sdl2#SDL_SetColorKey sdl2#755)

(define sdl2#SDL_SetCursor sdl2#756)

(define sdl2#SDL_SetError sdl2#757)

(define sdl2#SDL_SetEventFilter sdl2#758)

(define sdl2#SDL_SetHint sdl2#759)

(define sdl2#SDL_SetHintWithPriority sdl2#760)

(define sdl2#SDL_SetMainReady sdl2#761)

(define sdl2#SDL_SetModState sdl2#762)

(define sdl2#SDL_SetPaletteColors sdl2#763)

(define sdl2#SDL_SetPixelFormatPalette sdl2#764)

(define sdl2#SDL_SetRelativeMouseMode sdl2#765)

(define sdl2#SDL_SetRenderDrawBlendMode sdl2#766)

(define sdl2#SDL_SetRenderDrawColor sdl2#767)

(define sdl2#SDL_SetRenderTarget sdl2#768)

(define sdl2#SDL_SetSurfaceAlphaMod sdl2#769)

(define sdl2#SDL_SetSurfaceBlendMode sdl2#770)

(define sdl2#SDL_SetSurfaceColorMod sdl2#771)

(define sdl2#SDL_SetSurfacePalette sdl2#772)

(define sdl2#SDL_SetSurfaceRLE sdl2#773)

(define sdl2#SDL_SetTextInputRect sdl2#774)

(define sdl2#SDL_SetTextureAlphaMod sdl2#775)

(define sdl2#SDL_SetTextureBlendMode sdl2#776)

(define sdl2#SDL_SetTextureColorMod sdl2#777)

#!void

(define sdl2#SDL_SetWindowBordered sdl2#778)

(define sdl2#SDL_SetWindowBrightness sdl2#779)

(define sdl2#SDL_SetWindowData sdl2#780)

(define sdl2#SDL_SetWindowDisplayMode sdl2#781)

(define sdl2#SDL_SetWindowFullscreen sdl2#782)

(define sdl2#SDL_SetWindowGammaRamp sdl2#783)

(define sdl2#SDL_SetWindowGrab sdl2#784)

(define sdl2#SDL_SetWindowIcon sdl2#785)

(define sdl2#SDL_SetWindowMaximumSize sdl2#786)

(define sdl2#SDL_SetWindowMinimumSize sdl2#787)

(define sdl2#SDL_SetWindowPosition sdl2#788)

(define sdl2#SDL_SetWindowSize sdl2#789)

(define sdl2#SDL_SetWindowTitle sdl2#790)

(define sdl2#SDL_ShowCursor sdl2#791)

(define sdl2#SDL_ShowMessageBox sdl2#792)

(define sdl2#SDL_ShowSimpleMessageBox sdl2#793)

(define sdl2#SDL_ShowWindow sdl2#794)

(define sdl2#SDL_StartTextInput sdl2#795)

(define sdl2#SDL_StopTextInput sdl2#796)

(define sdl2#SDL_Swap16 sdl2#797)

(define sdl2#SDL_Swap32 sdl2#798)

(define sdl2#SDL_Swap64 sdl2#799)

(define sdl2#SDL_SwapBE16 sdl2#800)

(define sdl2#SDL_SwapBE32 sdl2#801)

(define sdl2#SDL_SwapBE64 sdl2#802)

(define sdl2#SDL_SwapFloat sdl2#803)

(define sdl2#SDL_SwapFloatBE sdl2#804)

(define sdl2#SDL_SwapFloatLE sdl2#805)

(define sdl2#SDL_SwapLE16 sdl2#806)

(define sdl2#SDL_SwapLE32 sdl2#807)

(define sdl2#SDL_SwapLE64 sdl2#808)

#!void

(define sdl2#SDL_TriggerBreakpoint sdl2#809)

(define sdl2#SDL_TryLockMutex sdl2#810)

(define sdl2#SDL_UnionRect sdl2#811)

(define sdl2#SDL_UnloadObject sdl2#812)

(define sdl2#SDL_UnlockAudio sdl2#813)

(define sdl2#SDL_UnlockAudioDevice sdl2#814)

(define sdl2#SDL_UnlockMutex sdl2#815)

(define sdl2#SDL_UnlockSurface sdl2#816)

(define sdl2#SDL_UnlockTexture sdl2#817)

(define sdl2#SDL_UpdateTexture sdl2#818)

(define sdl2#SDL_UpdateWindowSurface sdl2#819)

(define sdl2#SDL_UpdateWindowSurfaceRects sdl2#820)

(define sdl2#SDL_UpdateYUVTexture sdl2#821)

(define sdl2#SDL_VideoInit sdl2#822)

(define sdl2#SDL_VideoQuit sdl2#823)

(define sdl2#SDL_WaitEvent sdl2#824)

(define sdl2#SDL_WaitEventTimeout sdl2#825)

#!void

(define sdl2#SDL_WarpMouseInWindow sdl2#826)

(define sdl2#SDL_WasInit sdl2#827)

(define sdl2#SDL_WriteBE16 sdl2#828)

(define sdl2#SDL_WriteBE32 sdl2#829)

(define sdl2#SDL_WriteBE64 sdl2#830)

(define sdl2#SDL_WriteLE16 sdl2#831)

(define sdl2#SDL_WriteLE32 sdl2#832)

(define sdl2#SDL_WriteLE64 sdl2#833)

#!void

